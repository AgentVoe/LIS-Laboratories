/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1981.0, "minX": 0.0, "maxY": 46052.0, "series": [{"data": [[0.0, 2221.0], [0.1, 2221.0], [0.2, 2221.0], [0.3, 2453.0], [0.4, 2453.0], [0.5, 2543.0], [0.6, 2543.0], [0.7, 2543.0], [0.8, 2547.0], [0.9, 2547.0], [1.0, 2550.0], [1.1, 2550.0], [1.2, 3980.0], [1.3, 3980.0], [1.4, 3980.0], [1.5, 3993.0], [1.6, 3993.0], [1.7, 4242.0], [1.8, 4242.0], [1.9, 4424.0], [2.0, 4424.0], [2.1, 4424.0], [2.2, 4449.0], [2.3, 4449.0], [2.4, 4940.0], [2.5, 4940.0], [2.6, 4940.0], [2.7, 4940.0], [2.8, 4940.0], [2.9, 4979.0], [3.0, 4979.0], [3.1, 4991.0], [3.2, 4991.0], [3.3, 4991.0], [3.4, 4996.0], [3.5, 4996.0], [3.6, 5010.0], [3.7, 5010.0], [3.8, 5012.0], [3.9, 5012.0], [4.0, 5012.0], [4.1, 5012.0], [4.2, 5012.0], [4.3, 5020.0], [4.4, 5020.0], [4.5, 5020.0], [4.6, 5038.0], [4.7, 5038.0], [4.8, 5061.0], [4.9, 5061.0], [5.0, 5114.0], [5.1, 5114.0], [5.2, 5114.0], [5.3, 5253.0], [5.4, 5253.0], [5.5, 5262.0], [5.6, 5262.0], [5.7, 5268.0], [5.8, 5268.0], [5.9, 5268.0], [6.0, 5287.0], [6.1, 5287.0], [6.2, 5321.0], [6.3, 5321.0], [6.4, 5321.0], [6.5, 5321.0], [6.6, 5321.0], [6.7, 5338.0], [6.8, 5338.0], [6.9, 5344.0], [7.0, 5344.0], [7.1, 5344.0], [7.2, 5361.0], [7.3, 5361.0], [7.4, 5384.0], [7.5, 5384.0], [7.6, 5439.0], [7.7, 5439.0], [7.8, 5439.0], [7.9, 5444.0], [8.0, 5444.0], [8.1, 5445.0], [8.2, 5445.0], [8.3, 5451.0], [8.4, 5451.0], [8.5, 5451.0], [8.6, 5458.0], [8.7, 5458.0], [8.8, 5462.0], [8.9, 5462.0], [9.0, 5462.0], [9.1, 5465.0], [9.2, 5465.0], [9.3, 5466.0], [9.4, 5466.0], [9.5, 5470.0], [9.6, 5470.0], [9.7, 5470.0], [9.8, 5480.0], [9.9, 5480.0], [10.0, 5512.0], [10.1, 5512.0], [10.2, 5514.0], [10.3, 5514.0], [10.4, 5514.0], [10.5, 5704.0], [10.6, 5704.0], [10.7, 6439.0], [10.8, 6439.0], [10.9, 6439.0], [11.0, 6466.0], [11.1, 6466.0], [11.2, 6466.0], [11.3, 6466.0], [11.4, 6501.0], [11.5, 6501.0], [11.6, 6501.0], [11.7, 6509.0], [11.8, 6509.0], [11.9, 6579.0], [12.0, 6579.0], [12.1, 6579.0], [12.2, 6579.0], [12.3, 6579.0], [12.4, 6763.0], [12.5, 6763.0], [12.6, 8454.0], [12.7, 8454.0], [12.8, 8463.0], [12.9, 8463.0], [13.0, 8463.0], [13.1, 8473.0], [13.2, 8473.0], [13.3, 8480.0], [13.4, 8480.0], [13.5, 8480.0], [13.6, 8485.0], [13.7, 8485.0], [13.8, 8488.0], [13.9, 8488.0], [14.0, 8491.0], [14.1, 8491.0], [14.2, 8491.0], [14.3, 8491.0], [14.4, 8491.0], [14.5, 8497.0], [14.6, 8497.0], [14.7, 8498.0], [14.8, 8498.0], [14.9, 8498.0], [15.0, 9161.0], [15.1, 9161.0], [15.2, 9216.0], [15.3, 9216.0], [15.4, 9216.0], [15.5, 9216.0], [15.6, 9216.0], [15.7, 9232.0], [15.8, 9232.0], [15.9, 9235.0], [16.0, 9235.0], [16.1, 9235.0], [16.2, 9243.0], [16.3, 9243.0], [16.4, 9489.0], [16.5, 9489.0], [16.6, 9832.0], [16.7, 9832.0], [16.8, 9832.0], [16.9, 9834.0], [17.0, 9834.0], [17.1, 9891.0], [17.2, 9891.0], [17.3, 9892.0], [17.4, 9892.0], [17.5, 9892.0], [17.6, 9896.0], [17.7, 9896.0], [17.8, 9908.0], [17.9, 9908.0], [18.0, 9908.0], [18.1, 9929.0], [18.2, 9929.0], [18.3, 9966.0], [18.4, 9966.0], [18.5, 10001.0], [18.6, 10001.0], [18.7, 10001.0], [18.8, 10002.0], [18.9, 10002.0], [19.0, 10002.0], [19.1, 10002.0], [19.2, 10007.0], [19.3, 10007.0], [19.4, 10007.0], [19.5, 10008.0], [19.6, 10008.0], [19.7, 10009.0], [19.8, 10009.0], [19.9, 10009.0], [20.0, 10009.0], [20.1, 10009.0], [20.2, 10010.0], [20.3, 10010.0], [20.4, 10011.0], [20.5, 10011.0], [20.6, 10011.0], [20.7, 10011.0], [20.8, 10011.0], [20.9, 10014.0], [21.0, 10014.0], [21.1, 10015.0], [21.2, 10015.0], [21.3, 10015.0], [21.4, 10015.0], [21.5, 10015.0], [21.6, 10019.0], [21.7, 10019.0], [21.8, 10019.0], [21.9, 10019.0], [22.0, 10019.0], [22.1, 10020.0], [22.2, 10020.0], [22.3, 10027.0], [22.4, 10027.0], [22.5, 10027.0], [22.6, 10043.0], [22.7, 10043.0], [22.8, 10044.0], [22.9, 10044.0], [23.0, 10114.0], [23.1, 10114.0], [23.2, 10114.0], [23.3, 10209.0], [23.4, 10209.0], [23.5, 10211.0], [23.6, 10211.0], [23.7, 10231.0], [23.8, 10231.0], [23.9, 10231.0], [24.0, 10231.0], [24.1, 10231.0], [24.2, 10231.0], [24.3, 10231.0], [24.4, 10231.0], [24.5, 10277.0], [24.6, 10277.0], [24.7, 10285.0], [24.8, 10285.0], [24.9, 10286.0], [25.0, 10286.0], [25.1, 10286.0], [25.2, 10294.0], [25.3, 10294.0], [25.4, 10302.0], [25.5, 10302.0], [25.6, 10332.0], [25.7, 10332.0], [25.8, 10332.0], [25.9, 10334.0], [26.0, 10334.0], [26.1, 10335.0], [26.2, 10335.0], [26.3, 10335.0], [26.4, 10386.0], [26.5, 10386.0], [26.6, 10404.0], [26.7, 10404.0], [26.8, 10406.0], [26.9, 10406.0], [27.0, 10406.0], [27.1, 10411.0], [27.2, 10411.0], [27.3, 10484.0], [27.4, 10484.0], [27.5, 10498.0], [27.6, 10498.0], [27.7, 10498.0], [27.8, 10501.0], [27.9, 10501.0], [28.0, 10501.0], [28.1, 10501.0], [28.2, 10503.0], [28.3, 10503.0], [28.4, 10503.0], [28.5, 10514.0], [28.6, 10514.0], [28.7, 10528.0], [28.8, 10528.0], [28.9, 10528.0], [29.0, 10530.0], [29.1, 10530.0], [29.2, 10680.0], [29.3, 10680.0], [29.4, 10722.0], [29.5, 10722.0], [29.6, 10722.0], [29.7, 10732.0], [29.8, 10732.0], [29.9, 12213.0], [30.0, 12213.0], [30.1, 12215.0], [30.2, 12215.0], [30.3, 12215.0], [30.4, 12224.0], [30.5, 12224.0], [30.6, 13562.0], [30.7, 13562.0], [30.8, 13562.0], [30.9, 13639.0], [31.0, 13639.0], [31.1, 13661.0], [31.2, 13661.0], [31.3, 13771.0], [31.4, 13771.0], [31.5, 13771.0], [31.6, 13774.0], [31.7, 13774.0], [31.8, 13774.0], [31.9, 13774.0], [32.0, 13777.0], [32.1, 13777.0], [32.2, 13777.0], [32.3, 13787.0], [32.4, 13787.0], [32.5, 13796.0], [32.6, 13796.0], [32.7, 13796.0], [32.8, 13803.0], [32.9, 13803.0], [33.0, 13813.0], [33.1, 13813.0], [33.2, 13870.0], [33.3, 13870.0], [33.4, 13870.0], [33.5, 13875.0], [33.6, 13875.0], [33.7, 13901.0], [33.8, 13901.0], [33.9, 13925.0], [34.0, 13925.0], [34.1, 13925.0], [34.2, 13962.0], [34.3, 13962.0], [34.4, 13969.0], [34.5, 13969.0], [34.6, 13994.0], [34.7, 13994.0], [34.8, 13994.0], [34.9, 14024.0], [35.0, 14024.0], [35.1, 14024.0], [35.2, 14024.0], [35.3, 14024.0], [35.4, 14032.0], [35.5, 14032.0], [35.6, 14067.0], [35.7, 14067.0], [35.8, 14112.0], [35.9, 14112.0], [36.0, 14112.0], [36.1, 14121.0], [36.2, 14121.0], [36.3, 14138.0], [36.4, 14138.0], [36.5, 14138.0], [36.6, 14138.0], [36.7, 14138.0], [36.8, 14139.0], [36.9, 14139.0], [37.0, 14141.0], [37.1, 14141.0], [37.2, 14141.0], [37.3, 14141.0], [37.4, 14141.0], [37.5, 14155.0], [37.6, 14155.0], [37.7, 14163.0], [37.8, 14163.0], [37.9, 14163.0], [38.0, 14172.0], [38.1, 14172.0], [38.2, 14173.0], [38.3, 14173.0], [38.4, 14174.0], [38.5, 14174.0], [38.6, 14174.0], [38.7, 14176.0], [38.8, 14176.0], [38.9, 14176.0], [39.0, 14176.0], [39.1, 14186.0], [39.2, 14186.0], [39.3, 14186.0], [39.4, 14194.0], [39.5, 14194.0], [39.6, 14220.0], [39.7, 14220.0], [39.8, 14220.0], [39.9, 14221.0], [40.0, 14221.0], [40.1, 14239.0], [40.2, 14239.0], [40.3, 14284.0], [40.4, 14284.0], [40.5, 14284.0], [40.6, 14285.0], [40.7, 14285.0], [40.8, 14286.0], [40.9, 14286.0], [41.0, 14289.0], [41.1, 14289.0], [41.2, 14289.0], [41.3, 14290.0], [41.4, 14290.0], [41.5, 14299.0], [41.6, 14299.0], [41.7, 14299.0], [41.8, 14312.0], [41.9, 14312.0], [42.0, 14322.0], [42.1, 14322.0], [42.2, 14327.0], [42.3, 14327.0], [42.4, 14327.0], [42.5, 14328.0], [42.6, 14328.0], [42.7, 14329.0], [42.8, 14329.0], [42.9, 14331.0], [43.0, 14331.0], [43.1, 14331.0], [43.2, 14331.0], [43.3, 14331.0], [43.4, 14331.0], [43.5, 14331.0], [43.6, 14331.0], [43.7, 14338.0], [43.8, 14338.0], [43.9, 14356.0], [44.0, 14356.0], [44.1, 14357.0], [44.2, 14357.0], [44.3, 14357.0], [44.4, 14357.0], [44.5, 14357.0], [44.6, 14358.0], [44.7, 14358.0], [44.8, 14358.0], [44.9, 14358.0], [45.0, 14358.0], [45.1, 14360.0], [45.2, 14360.0], [45.3, 14360.0], [45.4, 14360.0], [45.5, 14381.0], [45.6, 14381.0], [45.7, 14381.0], [45.8, 14387.0], [45.9, 14387.0], [46.0, 14389.0], [46.1, 14389.0], [46.2, 14389.0], [46.3, 14389.0], [46.4, 14389.0], [46.5, 14399.0], [46.6, 14399.0], [46.7, 14410.0], [46.8, 14410.0], [46.9, 14410.0], [47.0, 14477.0], [47.1, 14477.0], [47.2, 14484.0], [47.3, 14484.0], [47.4, 14485.0], [47.5, 14485.0], [47.6, 14485.0], [47.7, 14487.0], [47.8, 14487.0], [47.9, 14488.0], [48.0, 14488.0], [48.1, 14488.0], [48.2, 14500.0], [48.3, 14500.0], [48.4, 14503.0], [48.5, 14503.0], [48.6, 14548.0], [48.7, 14548.0], [48.8, 14548.0], [48.9, 14552.0], [49.0, 14552.0], [49.1, 14557.0], [49.2, 14557.0], [49.3, 14607.0], [49.4, 14607.0], [49.5, 14607.0], [49.6, 14608.0], [49.7, 14608.0], [49.8, 14609.0], [49.9, 14609.0], [50.0, 14610.0], [50.1, 14610.0], [50.2, 14610.0], [50.3, 14623.0], [50.4, 14623.0], [50.5, 14629.0], [50.6, 14629.0], [50.7, 14629.0], [50.8, 14632.0], [50.9, 14632.0], [51.0, 14652.0], [51.1, 14652.0], [51.2, 14683.0], [51.3, 14683.0], [51.4, 14683.0], [51.5, 14725.0], [51.6, 14725.0], [51.7, 14731.0], [51.8, 14731.0], [51.9, 14731.0], [52.0, 14731.0], [52.1, 14731.0], [52.2, 14731.0], [52.3, 14731.0], [52.4, 14738.0], [52.5, 14738.0], [52.6, 14738.0], [52.7, 14752.0], [52.8, 14752.0], [52.9, 14783.0], [53.0, 14783.0], [53.1, 14790.0], [53.2, 14790.0], [53.3, 14790.0], [53.4, 14790.0], [53.5, 14790.0], [53.6, 14792.0], [53.7, 14792.0], [53.8, 14792.0], [53.9, 14792.0], [54.0, 14792.0], [54.1, 14793.0], [54.2, 14793.0], [54.3, 14807.0], [54.4, 14807.0], [54.5, 14807.0], [54.6, 14808.0], [54.7, 14808.0], [54.8, 14849.0], [54.9, 14849.0], [55.0, 14853.0], [55.1, 14853.0], [55.2, 14853.0], [55.3, 14854.0], [55.4, 14854.0], [55.5, 14856.0], [55.6, 14856.0], [55.7, 14862.0], [55.8, 14862.0], [55.9, 14862.0], [56.0, 14865.0], [56.1, 14865.0], [56.2, 14995.0], [56.3, 14995.0], [56.4, 15018.0], [56.5, 15018.0], [56.6, 15018.0], [56.7, 15020.0], [56.8, 15020.0], [56.9, 15084.0], [57.0, 15084.0], [57.1, 15084.0], [57.2, 15119.0], [57.3, 15119.0], [57.4, 15151.0], [57.5, 15151.0], [57.6, 15152.0], [57.7, 15152.0], [57.8, 15152.0], [57.9, 15155.0], [58.0, 15155.0], [58.1, 15161.0], [58.2, 15161.0], [58.3, 15161.0], [58.4, 15161.0], [58.5, 15161.0], [58.6, 15162.0], [58.7, 15162.0], [58.8, 15179.0], [58.9, 15179.0], [59.0, 15179.0], [59.1, 15180.0], [59.2, 15180.0], [59.3, 15180.0], [59.4, 15180.0], [59.5, 15180.0], [59.6, 15180.0], [59.7, 15180.0], [59.8, 15180.0], [59.9, 15180.0], [60.0, 15180.0], [60.1, 15180.0], [60.2, 15181.0], [60.3, 15181.0], [60.4, 15181.0], [60.5, 15184.0], [60.6, 15184.0], [60.7, 15198.0], [60.8, 15198.0], [60.9, 15198.0], [61.0, 15199.0], [61.1, 15199.0], [61.2, 15200.0], [61.3, 15200.0], [61.4, 15200.0], [61.5, 15200.0], [61.6, 15200.0], [61.7, 15201.0], [61.8, 15201.0], [61.9, 15201.0], [62.0, 15201.0], [62.1, 15201.0], [62.2, 15201.0], [62.3, 15201.0], [62.4, 15202.0], [62.5, 15202.0], [62.6, 15207.0], [62.7, 15207.0], [62.8, 15224.0], [62.9, 15224.0], [63.0, 15224.0], [63.1, 15225.0], [63.2, 15225.0], [63.3, 15225.0], [63.4, 15225.0], [63.5, 15225.0], [63.6, 15229.0], [63.7, 15229.0], [63.8, 15229.0], [63.9, 15229.0], [64.0, 15230.0], [64.1, 15230.0], [64.2, 15230.0], [64.3, 15232.0], [64.4, 15232.0], [64.5, 15233.0], [64.6, 15233.0], [64.7, 15233.0], [64.8, 15233.0], [64.9, 15233.0], [65.0, 15235.0], [65.1, 15235.0], [65.2, 15236.0], [65.3, 15236.0], [65.4, 15236.0], [65.5, 15236.0], [65.6, 15236.0], [65.7, 15236.0], [65.8, 15236.0], [65.9, 15236.0], [66.0, 15236.0], [66.1, 15236.0], [66.2, 15268.0], [66.3, 15268.0], [66.4, 15275.0], [66.5, 15275.0], [66.6, 15298.0], [66.7, 15298.0], [66.8, 15298.0], [66.9, 15370.0], [67.0, 15370.0], [67.1, 15375.0], [67.2, 15375.0], [67.3, 15434.0], [67.4, 15434.0], [67.5, 15434.0], [67.6, 15448.0], [67.7, 15448.0], [67.8, 15461.0], [67.9, 15461.0], [68.0, 15461.0], [68.1, 15461.0], [68.2, 15461.0], [68.3, 15462.0], [68.4, 15462.0], [68.5, 15470.0], [68.6, 15470.0], [68.7, 15470.0], [68.8, 15473.0], [68.9, 15473.0], [69.0, 15476.0], [69.1, 15476.0], [69.2, 15478.0], [69.3, 15478.0], [69.4, 15478.0], [69.5, 15478.0], [69.6, 15478.0], [69.7, 15481.0], [69.8, 15481.0], [69.9, 15481.0], [70.0, 15594.0], [70.1, 15594.0], [70.2, 15597.0], [70.3, 15597.0], [70.4, 16369.0], [70.5, 16369.0], [70.6, 16369.0], [70.7, 16523.0], [70.8, 16523.0], [70.9, 16523.0], [71.0, 16523.0], [71.1, 16532.0], [71.2, 16532.0], [71.3, 16532.0], [71.4, 16534.0], [71.5, 16534.0], [71.6, 16624.0], [71.7, 16624.0], [71.8, 16624.0], [71.9, 16675.0], [72.0, 16675.0], [72.1, 16857.0], [72.2, 16857.0], [72.3, 16857.0], [72.4, 16857.0], [72.5, 16857.0], [72.6, 16956.0], [72.7, 16956.0], [72.8, 16957.0], [72.9, 16957.0], [73.0, 16958.0], [73.1, 16958.0], [73.2, 16958.0], [73.3, 16959.0], [73.4, 16959.0], [73.5, 16995.0], [73.6, 16995.0], [73.7, 17001.0], [73.8, 17001.0], [73.9, 17001.0], [74.0, 17030.0], [74.1, 17030.0], [74.2, 17247.0], [74.3, 17247.0], [74.4, 17247.0], [74.5, 17264.0], [74.6, 17264.0], [74.7, 17265.0], [74.8, 17265.0], [74.9, 17265.0], [75.0, 17265.0], [75.1, 17265.0], [75.2, 17282.0], [75.3, 17282.0], [75.4, 17366.0], [75.5, 17366.0], [75.6, 17367.0], [75.7, 17367.0], [75.8, 17367.0], [75.9, 17381.0], [76.0, 17381.0], [76.1, 17642.0], [76.2, 17642.0], [76.3, 17642.0], [76.4, 17651.0], [76.5, 17651.0], [76.6, 17677.0], [76.7, 17677.0], [76.8, 17679.0], [76.9, 17679.0], [77.0, 17679.0], [77.1, 17681.0], [77.2, 17681.0], [77.3, 17721.0], [77.4, 17721.0], [77.5, 17724.0], [77.6, 17724.0], [77.7, 17724.0], [77.8, 17749.0], [77.9, 17749.0], [78.0, 18205.0], [78.1, 18205.0], [78.2, 18280.0], [78.3, 18280.0], [78.4, 18280.0], [78.5, 18287.0], [78.6, 18287.0], [78.7, 18297.0], [78.8, 18297.0], [78.9, 18297.0], [79.0, 18299.0], [79.1, 18299.0], [79.2, 18300.0], [79.3, 18300.0], [79.4, 18305.0], [79.5, 18305.0], [79.6, 18305.0], [79.7, 19000.0], [79.8, 19000.0], [79.9, 19041.0], [80.0, 19041.0], [80.1, 19042.0], [80.2, 19042.0], [80.3, 19042.0], [80.4, 19046.0], [80.5, 19046.0], [80.6, 19062.0], [80.7, 19062.0], [80.8, 19062.0], [80.9, 19062.0], [81.0, 19062.0], [81.1, 19063.0], [81.2, 19063.0], [81.3, 19067.0], [81.4, 19067.0], [81.5, 19067.0], [81.6, 19166.0], [81.7, 19166.0], [81.8, 19334.0], [81.9, 19334.0], [82.0, 19335.0], [82.1, 19335.0], [82.2, 19335.0], [82.3, 19819.0], [82.4, 19819.0], [82.5, 19891.0], [82.6, 19891.0], [82.7, 19891.0], [82.8, 20067.0], [82.9, 20067.0], [83.0, 20073.0], [83.1, 20073.0], [83.2, 20075.0], [83.3, 20075.0], [83.4, 20075.0], [83.5, 20079.0], [83.6, 20079.0], [83.7, 20106.0], [83.8, 20106.0], [83.9, 20310.0], [84.0, 20310.0], [84.1, 20310.0], [84.2, 20830.0], [84.3, 20830.0], [84.4, 20844.0], [84.5, 20844.0], [84.6, 20872.0], [84.7, 20872.0], [84.8, 20872.0], [84.9, 20888.0], [85.0, 20888.0], [85.1, 20927.0], [85.2, 20927.0], [85.3, 20927.0], [85.4, 20949.0], [85.5, 20949.0], [85.6, 21036.0], [85.7, 21036.0], [85.8, 22756.0], [85.9, 22756.0], [86.0, 22756.0], [86.1, 22807.0], [86.2, 22807.0], [86.3, 22831.0], [86.4, 22831.0], [86.5, 22855.0], [86.6, 22855.0], [86.7, 22855.0], [86.8, 22964.0], [86.9, 22964.0], [87.0, 22979.0], [87.1, 22979.0], [87.2, 22979.0], [87.3, 23021.0], [87.4, 23021.0], [87.5, 23122.0], [87.6, 23122.0], [87.7, 23124.0], [87.8, 23124.0], [87.9, 23124.0], [88.0, 23996.0], [88.1, 23996.0], [88.2, 24050.0], [88.3, 24050.0], [88.4, 24211.0], [88.5, 24211.0], [88.6, 24211.0], [88.7, 24374.0], [88.8, 24374.0], [88.9, 24431.0], [89.0, 24431.0], [89.1, 24474.0], [89.2, 24474.0], [89.3, 24474.0], [89.4, 24480.0], [89.5, 24480.0], [89.6, 24608.0], [89.7, 24608.0], [89.8, 24608.0], [89.9, 24839.0], [90.0, 24839.0], [90.1, 25657.0], [90.2, 25657.0], [90.3, 26021.0], [90.4, 26021.0], [90.5, 26021.0], [90.6, 26060.0], [90.7, 26060.0], [90.8, 26061.0], [90.9, 26061.0], [91.0, 26078.0], [91.1, 26078.0], [91.2, 26078.0], [91.3, 26091.0], [91.4, 26091.0], [91.5, 26112.0], [91.6, 26112.0], [91.7, 26112.0], [91.8, 26112.0], [91.9, 26112.0], [92.0, 26113.0], [92.1, 26113.0], [92.2, 26114.0], [92.3, 26114.0], [92.4, 26114.0], [92.5, 26123.0], [92.6, 26123.0], [92.7, 26146.0], [92.8, 26146.0], [92.9, 26150.0], [93.0, 26150.0], [93.1, 26150.0], [93.2, 26198.0], [93.3, 26198.0], [93.4, 26237.0], [93.5, 26237.0], [93.6, 26237.0], [93.7, 26237.0], [93.8, 26237.0], [93.9, 26238.0], [94.0, 26238.0], [94.1, 26384.0], [94.2, 26384.0], [94.3, 26384.0], [94.4, 26499.0], [94.5, 26499.0], [94.6, 26539.0], [94.7, 26539.0], [94.8, 26628.0], [94.9, 26628.0], [95.0, 26628.0], [95.1, 26628.0], [95.2, 26628.0], [95.3, 26640.0], [95.4, 26640.0], [95.5, 26652.0], [95.6, 26652.0], [95.7, 26652.0], [95.8, 26824.0], [95.9, 26824.0], [96.0, 26831.0], [96.1, 26831.0], [96.2, 26831.0], [96.3, 26968.0], [96.4, 26968.0], [96.5, 27017.0], [96.6, 27017.0], [96.7, 27045.0], [96.8, 27045.0], [96.9, 27045.0], [97.0, 27051.0], [97.1, 27051.0], [97.2, 27066.0], [97.3, 27066.0], [97.4, 27096.0], [97.5, 27096.0], [97.6, 27096.0], [97.7, 27790.0], [97.8, 27790.0], [97.9, 28104.0], [98.0, 28104.0], [98.1, 28104.0], [98.2, 29437.0], [98.3, 29437.0], [98.4, 30979.0], [98.5, 30979.0], [98.6, 37706.0], [98.7, 37706.0], [98.8, 37706.0], [98.9, 38053.0], [99.0, 38053.0], [99.1, 38836.0], [99.2, 38836.0], [99.3, 38871.0], [99.4, 38871.0], [99.5, 38871.0], [99.6, 39311.0], [99.7, 39311.0], [99.8, 41149.0], [99.9, 41149.0], [100.0, 41149.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 1981.0], [0.1, 1981.0], [0.2, 1981.0], [0.3, 2000.0], [0.4, 2000.0], [0.5, 2002.0], [0.6, 2002.0], [0.7, 2002.0], [0.8, 2060.0], [0.9, 2060.0], [1.0, 2080.0], [1.1, 2080.0], [1.2, 2111.0], [1.3, 2111.0], [1.4, 2111.0], [1.5, 2128.0], [1.6, 2128.0], [1.7, 2148.0], [1.8, 2148.0], [1.9, 2161.0], [2.0, 2161.0], [2.1, 2161.0], [2.2, 2164.0], [2.3, 2164.0], [2.4, 2173.0], [2.5, 2173.0], [2.6, 2173.0], [2.7, 2256.0], [2.8, 2256.0], [2.9, 2262.0], [3.0, 2262.0], [3.1, 2282.0], [3.2, 2282.0], [3.3, 2282.0], [3.4, 2290.0], [3.5, 2290.0], [3.6, 2302.0], [3.7, 2302.0], [3.8, 2321.0], [3.9, 2321.0], [4.0, 2321.0], [4.1, 2321.0], [4.2, 2321.0], [4.3, 2335.0], [4.4, 2335.0], [4.5, 2335.0], [4.6, 2340.0], [4.7, 2340.0], [4.8, 2373.0], [4.9, 2373.0], [5.0, 2391.0], [5.1, 2391.0], [5.2, 2391.0], [5.3, 2392.0], [5.4, 2392.0], [5.5, 2404.0], [5.6, 2404.0], [5.7, 2444.0], [5.8, 2444.0], [5.9, 2444.0], [6.0, 2455.0], [6.1, 2455.0], [6.2, 2456.0], [6.3, 2456.0], [6.4, 2477.0], [6.5, 2477.0], [6.6, 2477.0], [6.7, 2487.0], [6.8, 2487.0], [6.9, 2490.0], [7.0, 2490.0], [7.1, 2490.0], [7.2, 2492.0], [7.3, 2492.0], [7.4, 2503.0], [7.5, 2503.0], [7.6, 2573.0], [7.7, 2573.0], [7.8, 2573.0], [7.9, 2594.0], [8.0, 2594.0], [8.1, 2615.0], [8.2, 2615.0], [8.3, 2620.0], [8.4, 2620.0], [8.5, 2620.0], [8.6, 2623.0], [8.7, 2623.0], [8.8, 2635.0], [8.9, 2635.0], [9.0, 2635.0], [9.1, 2644.0], [9.2, 2644.0], [9.3, 2682.0], [9.4, 2682.0], [9.5, 2683.0], [9.6, 2683.0], [9.7, 2683.0], [9.8, 2684.0], [9.9, 2684.0], [10.0, 2699.0], [10.1, 2699.0], [10.2, 2745.0], [10.3, 2745.0], [10.4, 2745.0], [10.5, 2756.0], [10.6, 2756.0], [10.7, 2767.0], [10.8, 2767.0], [10.9, 2767.0], [11.0, 2775.0], [11.1, 2775.0], [11.2, 2778.0], [11.3, 2778.0], [11.4, 2788.0], [11.5, 2788.0], [11.6, 2788.0], [11.7, 2961.0], [11.8, 2961.0], [11.9, 3022.0], [12.0, 3022.0], [12.1, 3078.0], [12.2, 3078.0], [12.3, 3078.0], [12.4, 3082.0], [12.5, 3082.0], [12.6, 3118.0], [12.7, 3118.0], [12.8, 3124.0], [12.9, 3124.0], [13.0, 3124.0], [13.1, 3145.0], [13.2, 3145.0], [13.3, 3145.0], [13.4, 3145.0], [13.5, 3145.0], [13.6, 3155.0], [13.7, 3155.0], [13.8, 3164.0], [13.9, 3164.0], [14.0, 3167.0], [14.1, 3167.0], [14.2, 3167.0], [14.3, 3173.0], [14.4, 3173.0], [14.5, 3175.0], [14.6, 3175.0], [14.7, 3185.0], [14.8, 3185.0], [14.9, 3185.0], [15.0, 3199.0], [15.1, 3199.0], [15.2, 3211.0], [15.3, 3211.0], [15.4, 3211.0], [15.5, 3216.0], [15.6, 3216.0], [15.7, 3224.0], [15.8, 3224.0], [15.9, 3237.0], [16.0, 3237.0], [16.1, 3237.0], [16.2, 3243.0], [16.3, 3243.0], [16.4, 3289.0], [16.5, 3289.0], [16.6, 3290.0], [16.7, 3290.0], [16.8, 3290.0], [16.9, 3301.0], [17.0, 3301.0], [17.1, 3302.0], [17.2, 3302.0], [17.3, 3311.0], [17.4, 3311.0], [17.5, 3311.0], [17.6, 3320.0], [17.7, 3320.0], [17.8, 3325.0], [17.9, 3325.0], [18.0, 3325.0], [18.1, 3335.0], [18.2, 3335.0], [18.3, 3339.0], [18.4, 3339.0], [18.5, 3344.0], [18.6, 3344.0], [18.7, 3344.0], [18.8, 3377.0], [18.9, 3377.0], [19.0, 3390.0], [19.1, 3390.0], [19.2, 3392.0], [19.3, 3392.0], [19.4, 3392.0], [19.5, 3400.0], [19.6, 3400.0], [19.7, 3427.0], [19.8, 3427.0], [19.9, 3427.0], [20.0, 3448.0], [20.1, 3448.0], [20.2, 3453.0], [20.3, 3453.0], [20.4, 3456.0], [20.5, 3456.0], [20.6, 3456.0], [20.7, 3471.0], [20.8, 3471.0], [20.9, 3500.0], [21.0, 3500.0], [21.1, 3500.0], [21.2, 3500.0], [21.3, 3500.0], [21.4, 3505.0], [21.5, 3505.0], [21.6, 3509.0], [21.7, 3509.0], [21.8, 3509.0], [21.9, 3519.0], [22.0, 3519.0], [22.1, 3520.0], [22.2, 3520.0], [22.3, 3524.0], [22.4, 3524.0], [22.5, 3524.0], [22.6, 3542.0], [22.7, 3542.0], [22.8, 3561.0], [22.9, 3561.0], [23.0, 3584.0], [23.1, 3584.0], [23.2, 3584.0], [23.3, 3587.0], [23.4, 3587.0], [23.5, 3618.0], [23.6, 3618.0], [23.7, 3654.0], [23.8, 3654.0], [23.9, 3654.0], [24.0, 3655.0], [24.1, 3655.0], [24.2, 3661.0], [24.3, 3661.0], [24.4, 3661.0], [24.5, 3665.0], [24.6, 3665.0], [24.7, 3676.0], [24.8, 3676.0], [24.9, 3692.0], [25.0, 3692.0], [25.1, 3692.0], [25.2, 3697.0], [25.3, 3697.0], [25.4, 3698.0], [25.5, 3698.0], [25.6, 3704.0], [25.7, 3704.0], [25.8, 3704.0], [25.9, 3725.0], [26.0, 3725.0], [26.1, 3759.0], [26.2, 3759.0], [26.3, 3759.0], [26.4, 3761.0], [26.5, 3761.0], [26.6, 3761.0], [26.7, 3761.0], [26.8, 3769.0], [26.9, 3769.0], [27.0, 3769.0], [27.1, 3784.0], [27.2, 3784.0], [27.3, 3785.0], [27.4, 3785.0], [27.5, 3792.0], [27.6, 3792.0], [27.7, 3792.0], [27.8, 3803.0], [27.9, 3803.0], [28.0, 3806.0], [28.1, 3806.0], [28.2, 3818.0], [28.3, 3818.0], [28.4, 3818.0], [28.5, 3821.0], [28.6, 3821.0], [28.7, 3837.0], [28.8, 3837.0], [28.9, 3837.0], [29.0, 3839.0], [29.1, 3839.0], [29.2, 3839.0], [29.3, 3839.0], [29.4, 3848.0], [29.5, 3848.0], [29.6, 3848.0], [29.7, 3852.0], [29.8, 3852.0], [29.9, 3853.0], [30.0, 3853.0], [30.1, 3892.0], [30.2, 3892.0], [30.3, 3892.0], [30.4, 3895.0], [30.5, 3895.0], [30.6, 3896.0], [30.7, 3896.0], [30.8, 3896.0], [30.9, 3910.0], [31.0, 3910.0], [31.1, 3912.0], [31.2, 3912.0], [31.3, 3914.0], [31.4, 3914.0], [31.5, 3914.0], [31.6, 3922.0], [31.7, 3922.0], [31.8, 3930.0], [31.9, 3930.0], [32.0, 3938.0], [32.1, 3938.0], [32.2, 3938.0], [32.3, 3949.0], [32.4, 3949.0], [32.5, 3953.0], [32.6, 3953.0], [32.7, 3953.0], [32.8, 3959.0], [32.9, 3959.0], [33.0, 3966.0], [33.1, 3966.0], [33.2, 3967.0], [33.3, 3967.0], [33.4, 3967.0], [33.5, 3977.0], [33.6, 3977.0], [33.7, 3978.0], [33.8, 3978.0], [33.9, 3982.0], [34.0, 3982.0], [34.1, 3982.0], [34.2, 3986.0], [34.3, 3986.0], [34.4, 3996.0], [34.5, 3996.0], [34.6, 4006.0], [34.7, 4006.0], [34.8, 4006.0], [34.9, 4015.0], [35.0, 4015.0], [35.1, 4029.0], [35.2, 4029.0], [35.3, 4029.0], [35.4, 4029.0], [35.5, 4029.0], [35.6, 4031.0], [35.7, 4031.0], [35.8, 4037.0], [35.9, 4037.0], [36.0, 4037.0], [36.1, 4076.0], [36.2, 4076.0], [36.3, 4083.0], [36.4, 4083.0], [36.5, 4086.0], [36.6, 4086.0], [36.7, 4086.0], [36.8, 4092.0], [36.9, 4092.0], [37.0, 4094.0], [37.1, 4094.0], [37.2, 4094.0], [37.3, 4094.0], [37.4, 4094.0], [37.5, 4095.0], [37.6, 4095.0], [37.7, 4099.0], [37.8, 4099.0], [37.9, 4099.0], [38.0, 4102.0], [38.1, 4102.0], [38.2, 4103.0], [38.3, 4103.0], [38.4, 4103.0], [38.5, 4103.0], [38.6, 4103.0], [38.7, 4105.0], [38.8, 4105.0], [38.9, 4114.0], [39.0, 4114.0], [39.1, 4118.0], [39.2, 4118.0], [39.3, 4118.0], [39.4, 4121.0], [39.5, 4121.0], [39.6, 4125.0], [39.7, 4125.0], [39.8, 4125.0], [39.9, 4132.0], [40.0, 4132.0], [40.1, 4145.0], [40.2, 4145.0], [40.3, 4157.0], [40.4, 4157.0], [40.5, 4157.0], [40.6, 4171.0], [40.7, 4171.0], [40.8, 4173.0], [40.9, 4173.0], [41.0, 4185.0], [41.1, 4185.0], [41.2, 4185.0], [41.3, 4191.0], [41.4, 4191.0], [41.5, 4206.0], [41.6, 4206.0], [41.7, 4206.0], [41.8, 4218.0], [41.9, 4218.0], [42.0, 4235.0], [42.1, 4235.0], [42.2, 4236.0], [42.3, 4236.0], [42.4, 4236.0], [42.5, 4238.0], [42.6, 4238.0], [42.7, 4246.0], [42.8, 4246.0], [42.9, 4247.0], [43.0, 4247.0], [43.1, 4247.0], [43.2, 4247.0], [43.3, 4247.0], [43.4, 4248.0], [43.5, 4248.0], [43.6, 4248.0], [43.7, 4251.0], [43.8, 4251.0], [43.9, 4259.0], [44.0, 4259.0], [44.1, 4273.0], [44.2, 4273.0], [44.3, 4273.0], [44.4, 4275.0], [44.5, 4275.0], [44.6, 4280.0], [44.7, 4280.0], [44.8, 4285.0], [44.9, 4285.0], [45.0, 4285.0], [45.1, 4288.0], [45.2, 4288.0], [45.3, 4297.0], [45.4, 4297.0], [45.5, 4298.0], [45.6, 4298.0], [45.7, 4298.0], [45.8, 4300.0], [45.9, 4300.0], [46.0, 4320.0], [46.1, 4320.0], [46.2, 4320.0], [46.3, 4326.0], [46.4, 4326.0], [46.5, 4330.0], [46.6, 4330.0], [46.7, 4339.0], [46.8, 4339.0], [46.9, 4339.0], [47.0, 4346.0], [47.1, 4346.0], [47.2, 4361.0], [47.3, 4361.0], [47.4, 4368.0], [47.5, 4368.0], [47.6, 4368.0], [47.7, 4372.0], [47.8, 4372.0], [47.9, 4377.0], [48.0, 4377.0], [48.1, 4377.0], [48.2, 4388.0], [48.3, 4388.0], [48.4, 4394.0], [48.5, 4394.0], [48.6, 4399.0], [48.7, 4399.0], [48.8, 4399.0], [48.9, 4399.0], [49.0, 4399.0], [49.1, 4404.0], [49.2, 4404.0], [49.3, 4421.0], [49.4, 4421.0], [49.5, 4421.0], [49.6, 4439.0], [49.7, 4439.0], [49.8, 4439.0], [49.9, 4439.0], [50.0, 4441.0], [50.1, 4441.0], [50.2, 4441.0], [50.3, 4447.0], [50.4, 4447.0], [50.5, 4451.0], [50.6, 4451.0], [50.7, 4451.0], [50.8, 4455.0], [50.9, 4455.0], [51.0, 4458.0], [51.1, 4458.0], [51.2, 4460.0], [51.3, 4460.0], [51.4, 4460.0], [51.5, 4460.0], [51.6, 4460.0], [51.7, 4480.0], [51.8, 4480.0], [51.9, 4481.0], [52.0, 4481.0], [52.1, 4481.0], [52.2, 4490.0], [52.3, 4490.0], [52.4, 4499.0], [52.5, 4499.0], [52.6, 4499.0], [52.7, 4501.0], [52.8, 4501.0], [52.9, 4532.0], [53.0, 4532.0], [53.1, 4534.0], [53.2, 4534.0], [53.3, 4534.0], [53.4, 4541.0], [53.5, 4541.0], [53.6, 4545.0], [53.7, 4545.0], [53.8, 4559.0], [53.9, 4559.0], [54.0, 4559.0], [54.1, 4560.0], [54.2, 4560.0], [54.3, 4594.0], [54.4, 4594.0], [54.5, 4594.0], [54.6, 4597.0], [54.7, 4597.0], [54.8, 4602.0], [54.9, 4602.0], [55.0, 4605.0], [55.1, 4605.0], [55.2, 4605.0], [55.3, 4608.0], [55.4, 4608.0], [55.5, 4624.0], [55.6, 4624.0], [55.7, 4636.0], [55.8, 4636.0], [55.9, 4636.0], [56.0, 4659.0], [56.1, 4659.0], [56.2, 4667.0], [56.3, 4667.0], [56.4, 4674.0], [56.5, 4674.0], [56.6, 4674.0], [56.7, 4678.0], [56.8, 4678.0], [56.9, 4707.0], [57.0, 4707.0], [57.1, 4707.0], [57.2, 4719.0], [57.3, 4719.0], [57.4, 4752.0], [57.5, 4752.0], [57.6, 4781.0], [57.7, 4781.0], [57.8, 4781.0], [57.9, 4788.0], [58.0, 4788.0], [58.1, 4800.0], [58.2, 4800.0], [58.3, 4808.0], [58.4, 4808.0], [58.5, 4808.0], [58.6, 4810.0], [58.7, 4810.0], [58.8, 4819.0], [58.9, 4819.0], [59.0, 4819.0], [59.1, 4824.0], [59.2, 4824.0], [59.3, 4856.0], [59.4, 4856.0], [59.5, 4872.0], [59.6, 4872.0], [59.7, 4872.0], [59.8, 4901.0], [59.9, 4901.0], [60.0, 4922.0], [60.1, 4922.0], [60.2, 4950.0], [60.3, 4950.0], [60.4, 4950.0], [60.5, 4950.0], [60.6, 4950.0], [60.7, 4958.0], [60.8, 4958.0], [60.9, 4958.0], [61.0, 4960.0], [61.1, 4960.0], [61.2, 4966.0], [61.3, 4966.0], [61.4, 4972.0], [61.5, 4972.0], [61.6, 4972.0], [61.7, 4983.0], [61.8, 4983.0], [61.9, 4989.0], [62.0, 4989.0], [62.1, 4998.0], [62.2, 4998.0], [62.3, 4998.0], [62.4, 5009.0], [62.5, 5009.0], [62.6, 5017.0], [62.7, 5017.0], [62.8, 5021.0], [62.9, 5021.0], [63.0, 5021.0], [63.1, 5022.0], [63.2, 5022.0], [63.3, 5041.0], [63.4, 5041.0], [63.5, 5041.0], [63.6, 5060.0], [63.7, 5060.0], [63.8, 5063.0], [63.9, 5063.0], [64.0, 5065.0], [64.1, 5065.0], [64.2, 5065.0], [64.3, 5069.0], [64.4, 5069.0], [64.5, 5071.0], [64.6, 5071.0], [64.7, 5080.0], [64.8, 5080.0], [64.9, 5080.0], [65.0, 5088.0], [65.1, 5088.0], [65.2, 5115.0], [65.3, 5115.0], [65.4, 5115.0], [65.5, 5116.0], [65.6, 5116.0], [65.7, 5141.0], [65.8, 5141.0], [65.9, 5159.0], [66.0, 5159.0], [66.1, 5159.0], [66.2, 5171.0], [66.3, 5171.0], [66.4, 5182.0], [66.5, 5182.0], [66.6, 5189.0], [66.7, 5189.0], [66.8, 5189.0], [66.9, 5192.0], [67.0, 5192.0], [67.1, 5193.0], [67.2, 5193.0], [67.3, 5211.0], [67.4, 5211.0], [67.5, 5211.0], [67.6, 5220.0], [67.7, 5220.0], [67.8, 5227.0], [67.9, 5227.0], [68.0, 5227.0], [68.1, 5242.0], [68.2, 5242.0], [68.3, 5261.0], [68.4, 5261.0], [68.5, 5293.0], [68.6, 5293.0], [68.7, 5293.0], [68.8, 5315.0], [68.9, 5315.0], [69.0, 5324.0], [69.1, 5324.0], [69.2, 5331.0], [69.3, 5331.0], [69.4, 5331.0], [69.5, 5339.0], [69.6, 5339.0], [69.7, 5342.0], [69.8, 5342.0], [69.9, 5342.0], [70.0, 5351.0], [70.1, 5351.0], [70.2, 5354.0], [70.3, 5354.0], [70.4, 5365.0], [70.5, 5365.0], [70.6, 5365.0], [70.7, 5382.0], [70.8, 5382.0], [70.9, 5405.0], [71.0, 5405.0], [71.1, 5411.0], [71.2, 5411.0], [71.3, 5411.0], [71.4, 5440.0], [71.5, 5440.0], [71.6, 5448.0], [71.7, 5448.0], [71.8, 5448.0], [71.9, 5452.0], [72.0, 5452.0], [72.1, 5454.0], [72.2, 5454.0], [72.3, 5461.0], [72.4, 5461.0], [72.5, 5461.0], [72.6, 5466.0], [72.7, 5466.0], [72.8, 5467.0], [72.9, 5467.0], [73.0, 5468.0], [73.1, 5468.0], [73.2, 5468.0], [73.3, 5473.0], [73.4, 5473.0], [73.5, 5477.0], [73.6, 5477.0], [73.7, 5515.0], [73.8, 5515.0], [73.9, 5515.0], [74.0, 5519.0], [74.1, 5519.0], [74.2, 5523.0], [74.3, 5523.0], [74.4, 5523.0], [74.5, 5534.0], [74.6, 5534.0], [74.7, 5554.0], [74.8, 5554.0], [74.9, 5561.0], [75.0, 5561.0], [75.1, 5561.0], [75.2, 5565.0], [75.3, 5565.0], [75.4, 5574.0], [75.5, 5574.0], [75.6, 5587.0], [75.7, 5587.0], [75.8, 5587.0], [75.9, 5597.0], [76.0, 5597.0], [76.1, 5727.0], [76.2, 5727.0], [76.3, 5727.0], [76.4, 5776.0], [76.5, 5776.0], [76.6, 5863.0], [76.7, 5863.0], [76.8, 5886.0], [76.9, 5886.0], [77.0, 5886.0], [77.1, 5976.0], [77.2, 5976.0], [77.3, 5989.0], [77.4, 5989.0], [77.5, 6010.0], [77.6, 6010.0], [77.7, 6010.0], [77.8, 6048.0], [77.9, 6048.0], [78.0, 6076.0], [78.1, 6076.0], [78.2, 6105.0], [78.3, 6105.0], [78.4, 6105.0], [78.5, 6115.0], [78.6, 6115.0], [78.7, 6116.0], [78.8, 6116.0], [78.9, 6116.0], [79.0, 6135.0], [79.1, 6135.0], [79.2, 6145.0], [79.3, 6145.0], [79.4, 6151.0], [79.5, 6151.0], [79.6, 6151.0], [79.7, 6177.0], [79.8, 6177.0], [79.9, 6187.0], [80.0, 6187.0], [80.1, 6190.0], [80.2, 6190.0], [80.3, 6190.0], [80.4, 6210.0], [80.5, 6210.0], [80.6, 6213.0], [80.7, 6213.0], [80.8, 6213.0], [80.9, 6244.0], [81.0, 6244.0], [81.1, 6271.0], [81.2, 6271.0], [81.3, 6313.0], [81.4, 6313.0], [81.5, 6313.0], [81.6, 6328.0], [81.7, 6328.0], [81.8, 6399.0], [81.9, 6399.0], [82.0, 6400.0], [82.1, 6400.0], [82.2, 6400.0], [82.3, 6417.0], [82.4, 6417.0], [82.5, 6471.0], [82.6, 6471.0], [82.7, 6471.0], [82.8, 6626.0], [82.9, 6626.0], [83.0, 6681.0], [83.1, 6681.0], [83.2, 6728.0], [83.3, 6728.0], [83.4, 6728.0], [83.5, 6744.0], [83.6, 6744.0], [83.7, 6761.0], [83.8, 6761.0], [83.9, 6788.0], [84.0, 6788.0], [84.1, 6788.0], [84.2, 6806.0], [84.3, 6806.0], [84.4, 6814.0], [84.5, 6814.0], [84.6, 6817.0], [84.7, 6817.0], [84.8, 6817.0], [84.9, 6819.0], [85.0, 6819.0], [85.1, 6889.0], [85.2, 6889.0], [85.3, 6889.0], [85.4, 6892.0], [85.5, 6892.0], [85.6, 6901.0], [85.7, 6901.0], [85.8, 6936.0], [85.9, 6936.0], [86.0, 6936.0], [86.1, 6942.0], [86.2, 6942.0], [86.3, 6949.0], [86.4, 6949.0], [86.5, 7021.0], [86.6, 7021.0], [86.7, 7021.0], [86.8, 7103.0], [86.9, 7103.0], [87.0, 7132.0], [87.1, 7132.0], [87.2, 7132.0], [87.3, 7247.0], [87.4, 7247.0], [87.5, 7499.0], [87.6, 7499.0], [87.7, 7817.0], [87.8, 7817.0], [87.9, 7817.0], [88.0, 7945.0], [88.1, 7945.0], [88.2, 7964.0], [88.3, 7964.0], [88.4, 8101.0], [88.5, 8101.0], [88.6, 8101.0], [88.7, 8349.0], [88.8, 8349.0], [88.9, 8659.0], [89.0, 8659.0], [89.1, 9035.0], [89.2, 9035.0], [89.3, 9035.0], [89.4, 9385.0], [89.5, 9385.0], [89.6, 10075.0], [89.7, 10075.0], [89.8, 10075.0], [89.9, 10079.0], [90.0, 10079.0], [90.1, 10105.0], [90.2, 10105.0], [90.3, 13637.0], [90.4, 13637.0], [90.5, 13637.0], [90.6, 13666.0], [90.7, 13666.0], [90.8, 13686.0], [90.9, 13686.0], [91.0, 13777.0], [91.1, 13777.0], [91.2, 13777.0], [91.3, 13803.0], [91.4, 13803.0], [91.5, 13815.0], [91.6, 13815.0], [91.7, 13815.0], [91.8, 13835.0], [91.9, 13835.0], [92.0, 13872.0], [92.1, 13872.0], [92.2, 14008.0], [92.3, 14008.0], [92.4, 14008.0], [92.5, 14014.0], [92.6, 14014.0], [92.7, 14014.0], [92.8, 14014.0], [92.9, 14015.0], [93.0, 14015.0], [93.1, 14015.0], [93.2, 14015.0], [93.3, 14015.0], [93.4, 14017.0], [93.5, 14017.0], [93.6, 14017.0], [93.7, 14017.0], [93.8, 14017.0], [93.9, 14024.0], [94.0, 14024.0], [94.1, 14026.0], [94.2, 14026.0], [94.3, 14026.0], [94.4, 14032.0], [94.5, 14032.0], [94.6, 14618.0], [94.7, 14618.0], [94.8, 14650.0], [94.9, 14650.0], [95.0, 14650.0], [95.1, 14711.0], [95.2, 14711.0], [95.3, 14857.0], [95.4, 14857.0], [95.5, 14872.0], [95.6, 14872.0], [95.7, 14872.0], [95.8, 14903.0], [95.9, 14903.0], [96.0, 14930.0], [96.1, 14930.0], [96.2, 14930.0], [96.3, 14930.0], [96.4, 14930.0], [96.5, 14932.0], [96.6, 14932.0], [96.7, 15835.0], [96.8, 15835.0], [96.9, 15835.0], [97.0, 15891.0], [97.1, 15891.0], [97.2, 15897.0], [97.3, 15897.0], [97.4, 15898.0], [97.5, 15898.0], [97.6, 15898.0], [97.7, 15899.0], [97.8, 15899.0], [97.9, 16825.0], [98.0, 16825.0], [98.1, 16825.0], [98.2, 16835.0], [98.3, 16835.0], [98.4, 16870.0], [98.5, 16870.0], [98.6, 16897.0], [98.7, 16897.0], [98.8, 16897.0], [98.9, 18572.0], [99.0, 18572.0], [99.1, 18828.0], [99.2, 18828.0], [99.3, 18833.0], [99.4, 18833.0], [99.5, 18833.0], [99.6, 23225.0], [99.7, 23225.0], [99.8, 27585.0], [99.9, 27585.0], [100.0, 27585.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 4949.0], [0.1, 4976.0], [0.2, 5013.0], [0.3, 5013.0], [0.4, 5290.0], [0.5, 5320.0], [0.6, 5401.0], [0.7, 5428.0], [0.8, 5456.0], [0.9, 5462.0], [1.0, 5466.0], [1.1, 5474.0], [1.2, 5481.0], [1.3, 5496.0], [1.4, 5496.0], [1.5, 5507.0], [1.6, 5541.0], [1.7, 5595.0], [1.8, 5734.0], [1.9, 5796.0], [2.0, 6048.0], [2.1, 6054.0], [2.2, 6057.0], [2.3, 6108.0], [2.4, 6427.0], [2.5, 6462.0], [2.6, 6476.0], [2.7, 6552.0], [2.8, 6570.0], [2.9, 6608.0], [3.0, 7046.0], [3.1, 7076.0], [3.2, 7086.0], [3.3, 7112.0], [3.4, 7133.0], [3.5, 7144.0], [3.6, 7986.0], [3.7, 7999.0], [3.8, 8136.0], [3.9, 8138.0], [4.0, 8155.0], [4.1, 8156.0], [4.2, 8196.0], [4.3, 8311.0], [4.4, 8351.0], [4.5, 8378.0], [4.6, 8412.0], [4.7, 8465.0], [4.8, 8529.0], [4.9, 8763.0], [5.0, 8767.0], [5.1, 8956.0], [5.2, 8966.0], [5.3, 9205.0], [5.4, 9225.0], [5.5, 9225.0], [5.6, 9226.0], [5.7, 9229.0], [5.8, 9241.0], [5.9, 9292.0], [6.0, 9346.0], [6.1, 9358.0], [6.2, 9395.0], [6.3, 9419.0], [6.4, 9440.0], [6.5, 9462.0], [6.6, 9575.0], [6.7, 9585.0], [6.8, 9600.0], [6.9, 9622.0], [7.0, 9673.0], [7.1, 9683.0], [7.2, 9693.0], [7.3, 9697.0], [7.4, 9703.0], [7.5, 9704.0], [7.6, 9721.0], [7.7, 9725.0], [7.8, 9734.0], [7.9, 9743.0], [8.0, 9765.0], [8.1, 9784.0], [8.2, 9794.0], [8.3, 9874.0], [8.4, 9874.0], [8.5, 9884.0], [8.6, 9899.0], [8.7, 9903.0], [8.8, 9914.0], [8.9, 9920.0], [9.0, 9926.0], [9.1, 9942.0], [9.2, 9951.0], [9.3, 9952.0], [9.4, 9954.0], [9.5, 9959.0], [9.6, 9964.0], [9.7, 9966.0], [9.8, 9969.0], [9.9, 9988.0], [10.0, 9994.0], [10.1, 9998.0], [10.2, 10018.0], [10.3, 10022.0], [10.4, 10023.0], [10.5, 10063.0], [10.6, 10122.0], [10.7, 10165.0], [10.8, 10174.0], [10.9, 10183.0], [11.0, 10195.0], [11.1, 10264.0], [11.2, 10282.0], [11.3, 10293.0], [11.4, 10362.0], [11.5, 10387.0], [11.6, 10388.0], [11.7, 10391.0], [11.8, 10395.0], [11.9, 10446.0], [12.0, 10491.0], [12.1, 10512.0], [12.2, 10519.0], [12.3, 10525.0], [12.4, 10527.0], [12.5, 10562.0], [12.6, 10576.0], [12.7, 10591.0], [12.8, 10614.0], [12.9, 10624.0], [13.0, 10638.0], [13.1, 10646.0], [13.2, 10681.0], [13.3, 10694.0], [13.4, 10707.0], [13.5, 10714.0], [13.6, 10720.0], [13.7, 10743.0], [13.8, 10745.0], [13.9, 10757.0], [14.0, 10758.0], [14.1, 10790.0], [14.2, 10806.0], [14.3, 10820.0], [14.4, 10826.0], [14.5, 10845.0], [14.6, 10855.0], [14.7, 10877.0], [14.8, 10909.0], [14.9, 10918.0], [15.0, 10935.0], [15.1, 10938.0], [15.2, 10943.0], [15.3, 10952.0], [15.4, 10952.0], [15.5, 10973.0], [15.6, 10990.0], [15.7, 11001.0], [15.8, 11002.0], [15.9, 11009.0], [16.0, 11018.0], [16.1, 11027.0], [16.2, 11100.0], [16.3, 11119.0], [16.4, 11129.0], [16.5, 11130.0], [16.6, 11134.0], [16.7, 11135.0], [16.8, 11139.0], [16.9, 11233.0], [17.0, 11817.0], [17.1, 12167.0], [17.2, 12178.0], [17.3, 12196.0], [17.4, 12223.0], [17.5, 12310.0], [17.6, 12340.0], [17.7, 12348.0], [17.8, 12358.0], [17.9, 12360.0], [18.0, 12366.0], [18.1, 12405.0], [18.2, 12420.0], [18.3, 12424.0], [18.4, 12508.0], [18.5, 12570.0], [18.6, 12698.0], [18.7, 12938.0], [18.8, 12984.0], [18.9, 12984.0], [19.0, 13007.0], [19.1, 13017.0], [19.2, 13022.0], [19.3, 13026.0], [19.4, 13044.0], [19.5, 13073.0], [19.6, 13078.0], [19.7, 13145.0], [19.8, 13220.0], [19.9, 13233.0], [20.0, 13310.0], [20.1, 13349.0], [20.2, 13385.0], [20.3, 13415.0], [20.4, 13460.0], [20.5, 13490.0], [20.6, 13509.0], [20.7, 13563.0], [20.8, 13563.0], [20.9, 13572.0], [21.0, 13606.0], [21.1, 13606.0], [21.2, 13615.0], [21.3, 13628.0], [21.4, 13631.0], [21.5, 13636.0], [21.6, 13656.0], [21.7, 13669.0], [21.8, 13704.0], [21.9, 13713.0], [22.0, 13720.0], [22.1, 13728.0], [22.2, 13730.0], [22.3, 13743.0], [22.4, 13750.0], [22.5, 13763.0], [22.6, 13764.0], [22.7, 13764.0], [22.8, 13767.0], [22.9, 13781.0], [23.0, 13802.0], [23.1, 13806.0], [23.2, 13808.0], [23.3, 13808.0], [23.4, 13819.0], [23.5, 13821.0], [23.6, 13833.0], [23.7, 13839.0], [23.8, 13840.0], [23.9, 13840.0], [24.0, 13843.0], [24.1, 13848.0], [24.2, 13849.0], [24.3, 13850.0], [24.4, 13871.0], [24.5, 13871.0], [24.6, 13871.0], [24.7, 13875.0], [24.8, 13878.0], [24.9, 13879.0], [25.0, 13885.0], [25.1, 13885.0], [25.2, 13885.0], [25.3, 13892.0], [25.4, 13896.0], [25.5, 13902.0], [25.6, 13912.0], [25.7, 13913.0], [25.8, 13913.0], [25.9, 13914.0], [26.0, 13914.0], [26.1, 13916.0], [26.2, 13925.0], [26.3, 13925.0], [26.4, 13929.0], [26.5, 13932.0], [26.6, 13939.0], [26.7, 13945.0], [26.8, 13949.0], [26.9, 13956.0], [27.0, 13957.0], [27.1, 13958.0], [27.2, 13962.0], [27.3, 13978.0], [27.4, 13978.0], [27.5, 13979.0], [27.6, 13982.0], [27.7, 13983.0], [27.8, 13988.0], [27.9, 13992.0], [28.0, 13993.0], [28.1, 13997.0], [28.2, 13999.0], [28.3, 14001.0], [28.4, 14007.0], [28.5, 14009.0], [28.6, 14009.0], [28.7, 14012.0], [28.8, 14019.0], [28.9, 14021.0], [29.0, 14022.0], [29.1, 14030.0], [29.2, 14034.0], [29.3, 14040.0], [29.4, 14042.0], [29.5, 14046.0], [29.6, 14057.0], [29.7, 14064.0], [29.8, 14067.0], [29.9, 14071.0], [30.0, 14075.0], [30.1, 14079.0], [30.2, 14079.0], [30.3, 14083.0], [30.4, 14088.0], [30.5, 14089.0], [30.6, 14090.0], [30.7, 14095.0], [30.8, 14097.0], [30.9, 14098.0], [31.0, 14098.0], [31.1, 14098.0], [31.2, 14099.0], [31.3, 14106.0], [31.4, 14112.0], [31.5, 14113.0], [31.6, 14115.0], [31.7, 14117.0], [31.8, 14122.0], [31.9, 14133.0], [32.0, 14133.0], [32.1, 14133.0], [32.2, 14136.0], [32.3, 14140.0], [32.4, 14142.0], [32.5, 14143.0], [32.6, 14148.0], [32.7, 14149.0], [32.8, 14154.0], [32.9, 14156.0], [33.0, 14156.0], [33.1, 14157.0], [33.2, 14162.0], [33.3, 14172.0], [33.4, 14174.0], [33.5, 14178.0], [33.6, 14184.0], [33.7, 14187.0], [33.8, 14202.0], [33.9, 14203.0], [34.0, 14203.0], [34.1, 14205.0], [34.2, 14206.0], [34.3, 14208.0], [34.4, 14208.0], [34.5, 14219.0], [34.6, 14220.0], [34.7, 14224.0], [34.8, 14227.0], [34.9, 14229.0], [35.0, 14234.0], [35.1, 14234.0], [35.2, 14243.0], [35.3, 14247.0], [35.4, 14253.0], [35.5, 14256.0], [35.6, 14256.0], [35.7, 14262.0], [35.8, 14272.0], [35.9, 14272.0], [36.0, 14273.0], [36.1, 14275.0], [36.2, 14276.0], [36.3, 14288.0], [36.4, 14296.0], [36.5, 14301.0], [36.6, 14305.0], [36.7, 14311.0], [36.8, 14311.0], [36.9, 14314.0], [37.0, 14314.0], [37.1, 14316.0], [37.2, 14325.0], [37.3, 14328.0], [37.4, 14329.0], [37.5, 14330.0], [37.6, 14332.0], [37.7, 14332.0], [37.8, 14332.0], [37.9, 14335.0], [38.0, 14345.0], [38.1, 14351.0], [38.2, 14361.0], [38.3, 14362.0], [38.4, 14363.0], [38.5, 14367.0], [38.6, 14371.0], [38.7, 14371.0], [38.8, 14376.0], [38.9, 14377.0], [39.0, 14377.0], [39.1, 14379.0], [39.2, 14386.0], [39.3, 14387.0], [39.4, 14388.0], [39.5, 14392.0], [39.6, 14393.0], [39.7, 14394.0], [39.8, 14394.0], [39.9, 14395.0], [40.0, 14398.0], [40.1, 14400.0], [40.2, 14402.0], [40.3, 14402.0], [40.4, 14403.0], [40.5, 14408.0], [40.6, 14408.0], [40.7, 14408.0], [40.8, 14409.0], [40.9, 14409.0], [41.0, 14412.0], [41.1, 14412.0], [41.2, 14414.0], [41.3, 14425.0], [41.4, 14425.0], [41.5, 14426.0], [41.6, 14439.0], [41.7, 14441.0], [41.8, 14450.0], [41.9, 14451.0], [42.0, 14452.0], [42.1, 14455.0], [42.2, 14462.0], [42.3, 14463.0], [42.4, 14463.0], [42.5, 14465.0], [42.6, 14465.0], [42.7, 14466.0], [42.8, 14467.0], [42.9, 14471.0], [43.0, 14475.0], [43.1, 14475.0], [43.2, 14475.0], [43.3, 14476.0], [43.4, 14478.0], [43.5, 14482.0], [43.6, 14487.0], [43.7, 14491.0], [43.8, 14499.0], [43.9, 14504.0], [44.0, 14506.0], [44.1, 14507.0], [44.2, 14510.0], [44.3, 14510.0], [44.4, 14510.0], [44.5, 14511.0], [44.6, 14512.0], [44.7, 14513.0], [44.8, 14517.0], [44.9, 14518.0], [45.0, 14519.0], [45.1, 14519.0], [45.2, 14524.0], [45.3, 14530.0], [45.4, 14530.0], [45.5, 14545.0], [45.6, 14546.0], [45.7, 14547.0], [45.8, 14561.0], [45.9, 14565.0], [46.0, 14579.0], [46.1, 14579.0], [46.2, 14585.0], [46.3, 14586.0], [46.4, 14590.0], [46.5, 14593.0], [46.6, 14598.0], [46.7, 14600.0], [46.8, 14611.0], [46.9, 14615.0], [47.0, 14631.0], [47.1, 14633.0], [47.2, 14645.0], [47.3, 14670.0], [47.4, 14700.0], [47.5, 14701.0], [47.6, 14721.0], [47.7, 14744.0], [47.8, 14748.0], [47.9, 14759.0], [48.0, 14760.0], [48.1, 14761.0], [48.2, 14762.0], [48.3, 14773.0], [48.4, 14774.0], [48.5, 14777.0], [48.6, 14777.0], [48.7, 14777.0], [48.8, 14786.0], [48.9, 14794.0], [49.0, 14795.0], [49.1, 14802.0], [49.2, 14804.0], [49.3, 14811.0], [49.4, 14814.0], [49.5, 14818.0], [49.6, 14826.0], [49.7, 14829.0], [49.8, 14829.0], [49.9, 14834.0], [50.0, 14834.0], [50.1, 14835.0], [50.2, 14840.0], [50.3, 14841.0], [50.4, 14844.0], [50.5, 14845.0], [50.6, 14854.0], [50.7, 14857.0], [50.8, 14857.0], [50.9, 14857.0], [51.0, 14857.0], [51.1, 14859.0], [51.2, 14861.0], [51.3, 14862.0], [51.4, 14867.0], [51.5, 14869.0], [51.6, 14873.0], [51.7, 14907.0], [51.8, 14907.0], [51.9, 14908.0], [52.0, 14909.0], [52.1, 14921.0], [52.2, 14939.0], [52.3, 14951.0], [52.4, 14960.0], [52.5, 14966.0], [52.6, 14966.0], [52.7, 14969.0], [52.8, 14970.0], [52.9, 14997.0], [53.0, 15005.0], [53.1, 15020.0], [53.2, 15037.0], [53.3, 15058.0], [53.4, 15090.0], [53.5, 15093.0], [53.6, 15127.0], [53.7, 15130.0], [53.8, 15139.0], [53.9, 15149.0], [54.0, 15154.0], [54.1, 15157.0], [54.2, 15157.0], [54.3, 15157.0], [54.4, 15158.0], [54.5, 15162.0], [54.6, 15167.0], [54.7, 15167.0], [54.8, 15169.0], [54.9, 15174.0], [55.0, 15175.0], [55.1, 15177.0], [55.2, 15177.0], [55.3, 15178.0], [55.4, 15183.0], [55.5, 15183.0], [55.6, 15187.0], [55.7, 15188.0], [55.8, 15189.0], [55.9, 15196.0], [56.0, 15201.0], [56.1, 15205.0], [56.2, 15207.0], [56.3, 15208.0], [56.4, 15214.0], [56.5, 15214.0], [56.6, 15216.0], [56.7, 15220.0], [56.8, 15220.0], [56.9, 15220.0], [57.0, 15222.0], [57.1, 15223.0], [57.2, 15224.0], [57.3, 15224.0], [57.4, 15227.0], [57.5, 15231.0], [57.6, 15233.0], [57.7, 15234.0], [57.8, 15237.0], [57.9, 15237.0], [58.0, 15242.0], [58.1, 15249.0], [58.2, 15249.0], [58.3, 15253.0], [58.4, 15253.0], [58.5, 15260.0], [58.6, 15265.0], [58.7, 15267.0], [58.8, 15283.0], [58.9, 15294.0], [59.0, 15299.0], [59.1, 15306.0], [59.2, 15328.0], [59.3, 15332.0], [59.4, 15332.0], [59.5, 15343.0], [59.6, 15344.0], [59.7, 15345.0], [59.8, 15353.0], [59.9, 15372.0], [60.0, 15375.0], [60.1, 15378.0], [60.2, 15403.0], [60.3, 15406.0], [60.4, 15408.0], [60.5, 15410.0], [60.6, 15440.0], [60.7, 15443.0], [60.8, 15447.0], [60.9, 15490.0], [61.0, 15528.0], [61.1, 15544.0], [61.2, 15551.0], [61.3, 15567.0], [61.4, 15888.0], [61.5, 15946.0], [61.6, 15963.0], [61.7, 15963.0], [61.8, 16146.0], [61.9, 16185.0], [62.0, 16339.0], [62.1, 16343.0], [62.2, 16352.0], [62.3, 16364.0], [62.4, 16368.0], [62.5, 16381.0], [62.6, 16385.0], [62.7, 16391.0], [62.8, 16412.0], [62.9, 16418.0], [63.0, 16426.0], [63.1, 16440.0], [63.2, 16516.0], [63.3, 16618.0], [63.4, 16644.0], [63.5, 16688.0], [63.6, 16770.0], [63.7, 16801.0], [63.8, 16810.0], [63.9, 16817.0], [64.0, 16954.0], [64.1, 16989.0], [64.2, 16996.0], [64.3, 17000.0], [64.4, 17011.0], [64.5, 17024.0], [64.6, 17059.0], [64.7, 17079.0], [64.8, 17083.0], [64.9, 17099.0], [65.0, 17112.0], [65.1, 17163.0], [65.2, 17192.0], [65.3, 17193.0], [65.4, 17197.0], [65.5, 17199.0], [65.6, 17207.0], [65.7, 17210.0], [65.8, 17214.0], [65.9, 17248.0], [66.0, 17264.0], [66.1, 17269.0], [66.2, 17273.0], [66.3, 17284.0], [66.4, 17285.0], [66.5, 17291.0], [66.6, 17294.0], [66.7, 17300.0], [66.8, 17308.0], [66.9, 17364.0], [67.0, 17376.0], [67.1, 17397.0], [67.2, 17510.0], [67.3, 17529.0], [67.4, 17765.0], [67.5, 17770.0], [67.6, 17781.0], [67.7, 17785.0], [67.8, 17839.0], [67.9, 17861.0], [68.0, 17884.0], [68.1, 18163.0], [68.2, 18208.0], [68.3, 18226.0], [68.4, 18234.0], [68.5, 18246.0], [68.6, 18250.0], [68.7, 18257.0], [68.8, 18276.0], [68.9, 18283.0], [69.0, 18294.0], [69.1, 18303.0], [69.2, 18307.0], [69.3, 18325.0], [69.4, 18359.0], [69.5, 18497.0], [69.6, 18539.0], [69.7, 18571.0], [69.8, 18660.0], [69.9, 18700.0], [70.0, 18746.0], [70.1, 18781.0], [70.2, 18838.0], [70.3, 18885.0], [70.4, 18897.0], [70.5, 18907.0], [70.6, 18932.0], [70.7, 18951.0], [70.8, 18974.0], [70.9, 19000.0], [71.0, 19019.0], [71.1, 19028.0], [71.2, 19035.0], [71.3, 19089.0], [71.4, 19090.0], [71.5, 19104.0], [71.6, 19115.0], [71.7, 19130.0], [71.8, 19131.0], [71.9, 19195.0], [72.0, 19196.0], [72.1, 19213.0], [72.2, 19240.0], [72.3, 19257.0], [72.4, 19285.0], [72.5, 19290.0], [72.6, 19300.0], [72.7, 19320.0], [72.8, 19351.0], [72.9, 19358.0], [73.0, 19368.0], [73.1, 19369.0], [73.2, 19387.0], [73.3, 19389.0], [73.4, 19395.0], [73.5, 19398.0], [73.6, 19408.0], [73.7, 19411.0], [73.8, 19418.0], [73.9, 19421.0], [74.0, 19432.0], [74.1, 19457.0], [74.2, 19459.0], [74.3, 19466.0], [74.4, 19486.0], [74.5, 19523.0], [74.6, 19524.0], [74.7, 19553.0], [74.8, 19561.0], [74.9, 19572.0], [75.0, 19576.0], [75.1, 19597.0], [75.2, 19602.0], [75.3, 19604.0], [75.4, 19609.0], [75.5, 19610.0], [75.6, 19636.0], [75.7, 19657.0], [75.8, 19673.0], [75.9, 19682.0], [76.0, 19696.0], [76.1, 19727.0], [76.2, 19733.0], [76.3, 19738.0], [76.4, 19752.0], [76.5, 19763.0], [76.6, 19777.0], [76.7, 19790.0], [76.8, 19797.0], [76.9, 19804.0], [77.0, 19817.0], [77.1, 19828.0], [77.2, 19831.0], [77.3, 19841.0], [77.4, 19845.0], [77.5, 19849.0], [77.6, 19859.0], [77.7, 19874.0], [77.8, 19913.0], [77.9, 19924.0], [78.0, 19952.0], [78.1, 20002.0], [78.2, 20019.0], [78.3, 20063.0], [78.4, 20078.0], [78.5, 20091.0], [78.6, 20133.0], [78.7, 20155.0], [78.8, 20156.0], [78.9, 20161.0], [79.0, 20172.0], [79.1, 20180.0], [79.2, 20188.0], [79.3, 20198.0], [79.4, 20199.0], [79.5, 20206.0], [79.6, 20222.0], [79.7, 20253.0], [79.8, 20275.0], [79.9, 20387.0], [80.0, 20413.0], [80.1, 20437.0], [80.2, 20451.0], [80.3, 20474.0], [80.4, 20485.0], [80.5, 20493.0], [80.6, 20513.0], [80.7, 20520.0], [80.8, 20532.0], [80.9, 20550.0], [81.0, 20583.0], [81.1, 20594.0], [81.2, 20595.0], [81.3, 20604.0], [81.4, 20604.0], [81.5, 20609.0], [81.6, 20619.0], [81.7, 20621.0], [81.8, 20623.0], [81.9, 20637.0], [82.0, 20677.0], [82.1, 20677.0], [82.2, 20714.0], [82.3, 20754.0], [82.4, 20765.0], [82.5, 20772.0], [82.6, 20812.0], [82.7, 20816.0], [82.8, 20834.0], [82.9, 20851.0], [83.0, 20852.0], [83.1, 20891.0], [83.2, 20917.0], [83.3, 20927.0], [83.4, 20950.0], [83.5, 20983.0], [83.6, 20983.0], [83.7, 21012.0], [83.8, 21031.0], [83.9, 21032.0], [84.0, 21042.0], [84.1, 21050.0], [84.2, 21083.0], [84.3, 21083.0], [84.4, 21117.0], [84.5, 21169.0], [84.6, 21175.0], [84.7, 21196.0], [84.8, 21228.0], [84.9, 21238.0], [85.0, 21260.0], [85.1, 21270.0], [85.2, 21274.0], [85.3, 21302.0], [85.4, 21313.0], [85.5, 21349.0], [85.6, 21376.0], [85.7, 21383.0], [85.8, 21388.0], [85.9, 21409.0], [86.0, 21420.0], [86.1, 21436.0], [86.2, 21460.0], [86.3, 21476.0], [86.4, 21519.0], [86.5, 21556.0], [86.6, 21585.0], [86.7, 21602.0], [86.8, 21613.0], [86.9, 21625.0], [87.0, 21629.0], [87.1, 21635.0], [87.2, 21647.0], [87.3, 21696.0], [87.4, 21711.0], [87.5, 21713.0], [87.6, 21724.0], [87.7, 21840.0], [87.8, 21857.0], [87.9, 21952.0], [88.0, 22048.0], [88.1, 22152.0], [88.2, 22384.0], [88.3, 22395.0], [88.4, 22406.0], [88.5, 22408.0], [88.6, 22452.0], [88.7, 22585.0], [88.8, 22597.0], [88.9, 22942.0], [89.0, 23213.0], [89.1, 23480.0], [89.2, 23575.0], [89.3, 23585.0], [89.4, 23720.0], [89.5, 24280.0], [89.6, 24326.0], [89.7, 24898.0], [89.8, 24940.0], [89.9, 25018.0], [90.0, 25052.0], [90.1, 25233.0], [90.2, 25367.0], [90.3, 25387.0], [90.4, 25447.0], [90.5, 25559.0], [90.6, 25573.0], [90.7, 25673.0], [90.8, 25757.0], [90.9, 25927.0], [91.0, 26332.0], [91.1, 26537.0], [91.2, 26685.0], [91.3, 26701.0], [91.4, 26701.0], [91.5, 26782.0], [91.6, 26830.0], [91.7, 26957.0], [91.8, 26990.0], [91.9, 27224.0], [92.0, 27322.0], [92.1, 27357.0], [92.2, 27520.0], [92.3, 27607.0], [92.4, 27713.0], [92.5, 27744.0], [92.6, 27936.0], [92.7, 28002.0], [92.8, 28005.0], [92.9, 28080.0], [93.0, 28146.0], [93.1, 28156.0], [93.2, 28239.0], [93.3, 28251.0], [93.4, 28362.0], [93.5, 28365.0], [93.6, 28396.0], [93.7, 28445.0], [93.8, 28471.0], [93.9, 28487.0], [94.0, 28508.0], [94.1, 28554.0], [94.2, 28643.0], [94.3, 28650.0], [94.4, 28796.0], [94.5, 28799.0], [94.6, 28814.0], [94.7, 28821.0], [94.8, 28863.0], [94.9, 28922.0], [95.0, 28950.0], [95.1, 28985.0], [95.2, 29085.0], [95.3, 29115.0], [95.4, 29121.0], [95.5, 29133.0], [95.6, 29308.0], [95.7, 29338.0], [95.8, 29469.0], [95.9, 29671.0], [96.0, 29796.0], [96.1, 29807.0], [96.2, 29855.0], [96.3, 30038.0], [96.4, 30261.0], [96.5, 30581.0], [96.6, 30673.0], [96.7, 30905.0], [96.8, 30920.0], [96.9, 31554.0], [97.0, 31557.0], [97.1, 31659.0], [97.2, 31667.0], [97.3, 31693.0], [97.4, 31694.0], [97.5, 31698.0], [97.6, 31699.0], [97.7, 31757.0], [97.8, 32242.0], [97.9, 32672.0], [98.0, 32684.0], [98.1, 32852.0], [98.2, 32853.0], [98.3, 32879.0], [98.4, 32915.0], [98.5, 33050.0], [98.6, 33057.0], [98.7, 33060.0], [98.8, 33088.0], [98.9, 33089.0], [99.0, 33511.0], [99.1, 33906.0], [99.2, 33985.0], [99.3, 34206.0], [99.4, 40097.0], [99.5, 40497.0], [99.6, 42249.0], [99.7, 43768.0], [99.8, 44080.0], [99.9, 46052.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1900.0, "maxY": 38.0, "series": [{"data": [[37700.0, 1.0], [39300.0, 1.0], [41100.0, 1.0], [2200.0, 1.0], [2400.0, 1.0], [2500.0, 3.0], [3900.0, 2.0], [4200.0, 1.0], [4400.0, 2.0], [5000.0, 6.0], [4900.0, 5.0], [5100.0, 1.0], [5200.0, 4.0], [5300.0, 6.0], [5400.0, 10.0], [5500.0, 2.0], [5700.0, 1.0], [6500.0, 4.0], [6400.0, 3.0], [6700.0, 1.0], [8400.0, 10.0], [9200.0, 5.0], [9100.0, 1.0], [9400.0, 1.0], [10000.0, 19.0], [9800.0, 5.0], [9900.0, 3.0], [10200.0, 9.0], [10100.0, 1.0], [10700.0, 2.0], [10300.0, 5.0], [10400.0, 5.0], [10500.0, 6.0], [10600.0, 1.0], [12200.0, 3.0], [13800.0, 4.0], [13500.0, 1.0], [13700.0, 6.0], [13600.0, 2.0], [14000.0, 4.0], [14200.0, 9.0], [14100.0, 16.0], [13900.0, 5.0], [14300.0, 21.0], [14400.0, 6.0], [14500.0, 5.0], [14600.0, 9.0], [14700.0, 12.0], [14800.0, 8.0], [15100.0, 17.0], [15200.0, 24.0], [15300.0, 2.0], [14900.0, 1.0], [15000.0, 3.0], [15400.0, 11.0], [15500.0, 2.0], [16300.0, 1.0], [17300.0, 3.0], [17200.0, 5.0], [16900.0, 5.0], [16500.0, 4.0], [16800.0, 2.0], [17000.0, 2.0], [16600.0, 2.0], [18200.0, 5.0], [18300.0, 2.0], [17600.0, 5.0], [17700.0, 3.0], [19100.0, 1.0], [19000.0, 8.0], [19300.0, 2.0], [20000.0, 4.0], [20100.0, 1.0], [20300.0, 1.0], [19800.0, 2.0], [21000.0, 1.0], [20800.0, 4.0], [20900.0, 2.0], [22900.0, 2.0], [23100.0, 2.0], [22700.0, 1.0], [22800.0, 3.0], [23000.0, 1.0], [23900.0, 1.0], [24200.0, 1.0], [24300.0, 1.0], [24000.0, 1.0], [24400.0, 3.0], [24600.0, 1.0], [24800.0, 1.0], [26000.0, 5.0], [26100.0, 8.0], [26200.0, 3.0], [26300.0, 1.0], [26500.0, 1.0], [26600.0, 4.0], [26400.0, 1.0], [25600.0, 1.0], [26800.0, 2.0], [26900.0, 1.0], [27000.0, 5.0], [27700.0, 1.0], [28100.0, 1.0], [29400.0, 1.0], [30900.0, 1.0], [38000.0, 1.0], [38800.0, 2.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1900.0, 1.0], [2000.0, 4.0], [2100.0, 6.0], [2200.0, 4.0], [2300.0, 8.0], [2400.0, 8.0], [2500.0, 3.0], [2600.0, 9.0], [2700.0, 6.0], [2900.0, 1.0], [3000.0, 3.0], [3100.0, 11.0], [3300.0, 11.0], [3200.0, 7.0], [3400.0, 6.0], [3500.0, 11.0], [3600.0, 9.0], [3700.0, 9.0], [3800.0, 13.0], [3900.0, 16.0], [4000.0, 14.0], [4300.0, 14.0], [4100.0, 15.0], [4200.0, 18.0], [4400.0, 15.0], [4500.0, 9.0], [4600.0, 9.0], [4800.0, 7.0], [4700.0, 5.0], [5100.0, 9.0], [5000.0, 12.0], [4900.0, 11.0], [5300.0, 9.0], [5200.0, 6.0], [5500.0, 10.0], [5400.0, 12.0], [5700.0, 2.0], [5800.0, 2.0], [6100.0, 9.0], [6000.0, 3.0], [5900.0, 2.0], [6200.0, 4.0], [6300.0, 3.0], [6600.0, 2.0], [6400.0, 3.0], [6900.0, 4.0], [6800.0, 6.0], [6700.0, 4.0], [7100.0, 2.0], [7000.0, 1.0], [7200.0, 1.0], [7400.0, 1.0], [7900.0, 2.0], [7800.0, 1.0], [8100.0, 1.0], [8600.0, 1.0], [8300.0, 1.0], [9000.0, 1.0], [9300.0, 1.0], [10000.0, 2.0], [10100.0, 1.0], [13800.0, 4.0], [13600.0, 3.0], [13700.0, 1.0], [14000.0, 10.0], [14600.0, 2.0], [14700.0, 1.0], [14800.0, 2.0], [14900.0, 4.0], [15800.0, 5.0], [16800.0, 4.0], [18500.0, 1.0], [18800.0, 2.0], [23200.0, 1.0], [27500.0, 1.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[32900.0, 1.0], [43700.0, 1.0], [4900.0, 2.0], [5000.0, 1.0], [5300.0, 1.0], [5200.0, 2.0], [5400.0, 8.0], [5500.0, 3.0], [5700.0, 2.0], [6000.0, 3.0], [6100.0, 1.0], [6500.0, 2.0], [6600.0, 1.0], [6400.0, 3.0], [7100.0, 3.0], [7000.0, 3.0], [7900.0, 2.0], [8100.0, 5.0], [8300.0, 4.0], [8700.0, 2.0], [8400.0, 2.0], [8500.0, 1.0], [8900.0, 2.0], [9200.0, 7.0], [9300.0, 3.0], [9600.0, 6.0], [9400.0, 3.0], [9700.0, 9.0], [9500.0, 2.0], [10000.0, 4.0], [9900.0, 15.0], [10200.0, 3.0], [10100.0, 5.0], [9800.0, 4.0], [10300.0, 5.0], [10700.0, 8.0], [10600.0, 6.0], [10500.0, 7.0], [10400.0, 2.0], [10800.0, 6.0], [11000.0, 5.0], [10900.0, 9.0], [11100.0, 7.0], [11200.0, 1.0], [12200.0, 1.0], [12100.0, 3.0], [11800.0, 1.0], [12400.0, 3.0], [12300.0, 6.0], [12500.0, 2.0], [12600.0, 1.0], [13000.0, 7.0], [12900.0, 2.0], [13100.0, 1.0], [13200.0, 2.0], [13300.0, 3.0], [13700.0, 12.0], [13600.0, 8.0], [13500.0, 4.0], [13400.0, 3.0], [13800.0, 25.0], [13900.0, 28.0], [14300.0, 36.0], [14200.0, 27.0], [14100.0, 25.0], [14000.0, 30.0], [14400.0, 38.0], [14800.0, 26.0], [14500.0, 28.0], [14700.0, 17.0], [14600.0, 7.0], [14900.0, 13.0], [15000.0, 6.0], [15100.0, 24.0], [15200.0, 31.0], [15300.0, 11.0], [15500.0, 4.0], [15800.0, 1.0], [15400.0, 8.0], [16300.0, 8.0], [15900.0, 3.0], [16100.0, 2.0], [16600.0, 3.0], [17000.0, 7.0], [17200.0, 11.0], [16800.0, 3.0], [16400.0, 4.0], [18400.0, 1.0], [17800.0, 3.0], [18200.0, 9.0], [18600.0, 1.0], [19200.0, 5.0], [19400.0, 9.0], [19000.0, 6.0], [18800.0, 3.0], [19800.0, 9.0], [20200.0, 4.0], [19600.0, 9.0], [20000.0, 5.0], [20400.0, 6.0], [21400.0, 5.0], [21000.0, 7.0], [20800.0, 6.0], [20600.0, 9.0], [21200.0, 5.0], [22000.0, 1.0], [22400.0, 3.0], [21600.0, 7.0], [21800.0, 2.0], [23200.0, 1.0], [23400.0, 1.0], [24200.0, 1.0], [25200.0, 1.0], [25400.0, 1.0], [24800.0, 1.0], [25000.0, 2.0], [26600.0, 1.0], [25600.0, 1.0], [26800.0, 1.0], [27200.0, 1.0], [27600.0, 1.0], [28600.0, 2.0], [28000.0, 3.0], [28400.0, 3.0], [28200.0, 2.0], [28800.0, 3.0], [29000.0, 1.0], [29600.0, 1.0], [29400.0, 1.0], [29800.0, 2.0], [30200.0, 1.0], [30600.0, 1.0], [30000.0, 1.0], [31600.0, 6.0], [32600.0, 2.0], [32200.0, 1.0], [32800.0, 3.0], [40000.0, 1.0], [40400.0, 1.0], [44000.0, 1.0], [46000.0, 1.0], [33500.0, 1.0], [33900.0, 2.0], [17300.0, 5.0], [16900.0, 3.0], [17100.0, 6.0], [16500.0, 1.0], [16700.0, 1.0], [17500.0, 2.0], [18300.0, 4.0], [17700.0, 4.0], [18100.0, 1.0], [19300.0, 11.0], [19100.0, 6.0], [18700.0, 3.0], [18500.0, 2.0], [18900.0, 4.0], [19700.0, 8.0], [19500.0, 7.0], [19900.0, 3.0], [20100.0, 9.0], [20300.0, 1.0], [21300.0, 6.0], [21500.0, 3.0], [20900.0, 5.0], [20500.0, 7.0], [20700.0, 4.0], [21100.0, 4.0], [21900.0, 1.0], [22100.0, 1.0], [21700.0, 3.0], [22300.0, 2.0], [22500.0, 2.0], [23500.0, 2.0], [22900.0, 1.0], [24300.0, 1.0], [23700.0, 1.0], [25500.0, 2.0], [25300.0, 2.0], [24900.0, 1.0], [25700.0, 1.0], [26500.0, 1.0], [26300.0, 1.0], [25900.0, 1.0], [27300.0, 2.0], [26700.0, 3.0], [27500.0, 1.0], [26900.0, 2.0], [28100.0, 2.0], [28500.0, 2.0], [28300.0, 3.0], [27700.0, 2.0], [27900.0, 1.0], [28700.0, 2.0], [28900.0, 3.0], [29100.0, 3.0], [29300.0, 2.0], [29700.0, 1.0], [30500.0, 1.0], [30900.0, 2.0], [31500.0, 2.0], [31700.0, 1.0], [33000.0, 5.0], [34200.0, 1.0], [42200.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 46000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 654.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1190.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 654.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1190.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 466.46529284164757, "minX": 1.70230242E12, "maxY": 466.46529284164757, "series": [{"data": [[1.70230242E12, 466.46529284164757]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70230242E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1991.5, "minX": 1.0, "maxY": 46052.0, "series": [{"data": [[2.0, 39311.0], [3.0, 38836.0], [4.0, 38871.0], [5.0, 38053.0], [6.0, 37706.0], [7.0, 10027.0], [8.0, 2453.0], [9.0, 9489.0], [10.0, 22855.0], [11.0, 9161.0], [12.0, 19335.0], [13.0, 19334.0], [14.0, 22807.0], [15.0, 10114.0], [16.0, 9966.0], [17.0, 19891.0], [18.0, 30979.0], [19.0, 19819.0], [20.0, 28104.0], [21.0, 24474.0], [22.0, 24480.0], [23.0, 27790.0], [24.0, 24431.0], [25.0, 19067.0], [28.0, 19062.333333333332], [29.0, 19042.0], [31.0, 19043.5], [33.0, 26640.0], [32.0, 19000.0], [35.0, 17749.0], [34.0, 29437.0], [37.0, 17722.5], [39.0, 17679.0], [38.0, 17681.0], [41.0, 17651.0], [40.0, 17677.0], [42.0, 17642.0], [45.0, 25657.0], [44.0, 27055.5], [47.0, 27051.0], [46.0, 27017.0], [49.0, 4424.0], [48.0, 4449.0], [51.0, 5114.0], [50.0, 26824.0], [53.0, 20888.0], [52.0, 20927.0], [55.0, 20949.0], [54.0, 3993.0], [57.0, 20872.0], [56.0, 3980.0], [59.0, 20830.0], [58.0, 20844.0], [61.0, 2547.0], [60.0, 2550.0], [63.0, 27096.0], [62.0, 2543.0], [67.0, 5321.0], [65.0, 16156.0], [71.0, 20106.0], [70.0, 9326.0], [68.0, 20310.0], [75.0, 20073.0], [74.0, 20077.0], [73.0, 14331.0], [79.0, 26499.0], [78.0, 26652.0], [77.0, 26831.0], [76.0, 20067.0], [83.0, 26384.0], [82.0, 26539.0], [81.0, 26628.0], [87.0, 24839.0], [86.0, 16624.0], [85.0, 16675.0], [84.0, 2221.0], [91.0, 26146.0], [90.0, 26174.0], [88.0, 26123.0], [94.0, 26237.0], [92.0, 26238.0], [98.0, 26114.0], [96.0, 26049.5], [103.0, 26060.5], [101.0, 26105.0], [100.0, 26113.0], [107.0, 23124.0], [106.0, 22964.0], [105.0, 23021.0], [104.0, 19166.0], [111.0, 24211.0], [110.0, 24374.0], [109.0, 24050.0], [108.0, 24608.0], [115.0, 22756.0], [114.0, 14338.0], [113.0, 22831.0], [112.0, 23996.0], [118.0, 22979.0], [117.0, 15375.0], [116.0, 23122.0], [123.0, 15084.0], [122.0, 13650.0], [120.0, 15215.5], [126.0, 15006.5], [124.0, 15020.0], [133.0, 14652.0], [132.0, 14623.0], [131.0, 14629.0], [130.0, 14632.0], [129.0, 14304.0], [142.0, 21036.0], [140.0, 16533.0], [138.0, 13774.0], [137.0, 14548.0], [136.0, 14552.0], [146.0, 16369.0], [153.0, 15266.25], [162.0, 15298.0], [173.0, 15119.0], [172.0, 15155.0], [188.0, 15595.5], [197.0, 15477.0], [196.0, 15481.0], [194.0, 15447.5], [193.0, 15461.0], [207.0, 17012.5], [205.0, 15462.0], [204.0, 17001.0], [203.0, 15465.333333333334], [201.0, 15473.0], [215.0, 14725.0], [214.0, 14733.333333333334], [211.0, 14731.0], [223.0, 14357.0], [222.0, 14358.0], [221.0, 14360.0], [229.0, 14357.0], [228.0, 14381.0], [225.0, 14358.5], [238.0, 14262.0], [236.0, 14485.5], [233.0, 14495.5], [247.0, 14389.0], [244.0, 14387.0], [242.0, 13882.0], [254.0, 14399.0], [271.0, 14286.0], [261.0, 15322.0], [260.0, 13774.0], [258.0, 15314.0], [257.0, 13777.0], [274.0, 14054.0], [273.0, 14284.5], [317.0, 14121.0], [316.0, 14172.0], [315.0, 14164.0], [313.0, 14176.0], [312.0, 14176.0], [311.0, 14174.0], [331.0, 14140.333333333334], [328.0, 14138.0], [339.0, 16523.0], [381.0, 15275.0], [393.0, 16113.0], [389.0, 16956.0], [388.0, 16957.0], [384.0, 16959.0], [415.0, 15184.0], [407.0, 15200.0], [406.0, 15201.0], [402.0, 18305.0], [427.0, 18297.0], [426.0, 15200.0], [424.0, 18300.0], [423.0, 16703.0], [419.0, 18299.0], [418.0, 15201.0], [434.0, 18283.5], [462.0, 14856.0], [478.0, 14853.0], [477.0, 14855.5], [474.0, 14808.0], [471.0, 14807.0], [465.0, 14865.0], [464.0, 14783.0], [495.0, 14792.0], [487.0, 14791.5], [480.0, 14854.0], [511.0, 14610.0], [510.0, 14607.0], [507.0, 14752.0], [502.0, 14791.0], [542.0, 16679.6], [537.0, 14331.0], [536.0, 14330.0], [525.0, 17247.0], [518.0, 14289.0], [514.0, 14609.0], [513.0, 14608.0], [575.0, 13978.0], [565.0, 13969.0], [557.0, 17371.333333333332], [546.0, 14327.0], [544.0, 14328.0], [598.0, 14112.0], [602.0, 14064.666666666666], [631.0, 14477.0], [613.0, 14269.0], [612.0, 14290.0], [610.0, 14220.5], [608.0, 14181.0], [668.0, 15233.0], [671.0, 15231.0], [667.0, 15225.0], [665.0, 15225.0], [663.0, 15223.333333333334], [662.0, 15198.0], [658.0, 14485.0], [652.0, 15202.0], [651.0, 14557.0], [688.0, 15181.0], [696.0, 15151.0], [692.0, 15152.0], [691.0, 15179.5], [689.0, 15180.0], [686.0, 15170.5], [685.0, 15170.5], [679.0, 15162.0], [675.0, 15236.0], [673.0, 15232.0], [762.0, 10505.0], [767.0, 10469.5], [765.0, 10501.0], [764.0, 10506.0], [750.0, 10503.0], [745.0, 10680.0], [741.0, 13935.0], [739.0, 13813.0], [738.0, 13562.0], [798.0, 9948.666666666666], [799.0, 9929.0], [796.0, 9955.0], [795.0, 9896.0], [790.0, 10285.5], [788.0, 10307.57142857143], [784.0, 10231.0], [779.0, 10221.0], [775.0, 10386.0], [768.0, 10406.0], [776.0, 10334.0], [809.0, 10002.0], [806.0, 10008.5], [804.0, 9911.0], [801.0, 9892.0], [800.0, 10009.0], [862.0, 10009.0], [857.0, 10017.0], [854.0, 10017.0], [890.0, 10029.0], [888.0, 10019.0], [887.0, 11494.333333333334], [884.0, 12213.0], [915.0, 8471.5], [921.0, 9223.666666666666], [918.0, 10722.0], [917.0, 8473.0], [916.0, 8488.0], [913.0, 8495.333333333334], [910.0, 8491.0], [905.0, 9224.0], [903.0, 9216.0], [902.0, 9239.0], [956.0, 5262.0], [953.0, 5048.444444444445], [959.0, 6466.0], [949.0, 5454.0], [946.0, 5484.0], [944.0, 5445.0], [943.0, 5462.0], [941.0, 5470.0], [940.0, 5480.0], [938.0, 6579.0], [961.0, 5319.0], [977.0, 5451.0], [976.0, 5361.0], [975.0, 5704.0], [960.0, 6544.25], [1.0, 41149.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[425.32701421801005, 14943.613744075828]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 4455.0], [3.0, 5242.0], [4.0, 3377.0], [5.0, 2444.0], [6.0, 2391.0], [7.0, 15899.0], [8.0, 27585.0], [9.0, 15898.0], [10.0, 9385.0], [11.0, 15891.0], [12.0, 14650.0], [13.0, 14872.0], [14.0, 6177.0], [15.0, 14903.0], [16.0, 14932.0], [17.0, 14014.0], [18.0, 2080.0], [19.0, 13686.0], [20.0, 4950.0], [21.0, 6105.0], [22.0, 4856.0], [23.0, 5060.0], [24.0, 6471.0], [25.0, 13777.0], [28.0, 13955.0], [29.0, 13872.0], [31.0, 13822.5], [33.0, 4031.0], [32.0, 13666.0], [35.0, 13803.0], [34.0, 2256.0], [37.0, 13933.5], [39.0, 14017.0], [38.0, 14017.0], [41.0, 14014.0], [40.0, 14015.0], [42.0, 14015.0], [45.0, 5261.0], [44.0, 3002.0], [47.0, 2756.0], [46.0, 2778.0], [49.0, 16835.0], [48.0, 16825.0], [51.0, 15897.0], [50.0, 2644.0], [53.0, 6761.0], [52.0, 6936.0], [55.0, 6788.0], [54.0, 16897.0], [57.0, 6417.0], [56.0, 16870.0], [59.0, 7499.0], [58.0, 4029.0], [61.0, 18828.0], [60.0, 18833.0], [63.0, 2573.0], [62.0, 18572.0], [67.0, 14893.5], [65.0, 8635.0], [71.0, 6819.0], [70.0, 15273.0], [68.0, 3967.0], [75.0, 5220.0], [74.0, 6168.0], [73.0, 14618.0], [79.0, 2321.0], [78.0, 2161.0], [77.0, 2282.0], [76.0, 6190.0], [83.0, 2060.0], [82.0, 2111.0], [81.0, 2479.0], [87.0, 2767.0], [86.0, 10075.0], [85.0, 10105.0], [84.0, 23225.0], [91.0, 2000.0], [90.0, 2242.5], [88.0, 2128.0], [94.0, 2543.5], [92.0, 2623.0], [98.0, 2392.0], [96.0, 1991.5], [103.0, 2397.0], [101.0, 2401.0], [100.0, 2684.0], [107.0, 4394.0], [106.0, 5189.0], [105.0, 4983.0], [104.0, 6328.0], [111.0, 2490.0], [110.0, 2456.0], [109.0, 2487.0], [108.0, 2615.0], [115.0, 2477.0], [114.0, 6744.0], [113.0, 3853.0], [112.0, 3325.0], [118.0, 2594.0], [117.0, 8101.0], [116.0, 2635.0], [123.0, 5534.0], [122.0, 8484.0], [120.0, 6908.5], [126.0, 6755.0], [124.0, 5454.0], [133.0, 5554.0], [132.0, 5467.0], [131.0, 7964.0], [130.0, 7817.0], [129.0, 5874.0], [142.0, 3289.0], [140.0, 5123.5], [138.0, 6244.0], [137.0, 9035.0], [136.0, 8659.0], [146.0, 6213.0], [153.0, 6289.75], [162.0, 6313.0], [173.0, 5863.0], [172.0, 6400.0], [188.0, 4893.0], [197.0, 5181.5], [196.0, 5141.0], [194.0, 5338.5], [193.0, 5022.0], [207.0, 4504.5], [205.0, 5063.0], [204.0, 5382.0], [203.0, 5608.0], [201.0, 5473.0], [215.0, 6681.0], [214.0, 5142.333333333333], [211.0, 5466.0], [223.0, 5324.0], [222.0, 3938.0], [221.0, 6901.0], [229.0, 7062.0], [228.0, 5461.0], [225.0, 6060.5], [238.0, 6532.5], [236.0, 6464.5], [233.0, 5639.5], [247.0, 5352.5], [244.0, 5071.0], [242.0, 5310.666666666667], [254.0, 5351.0], [271.0, 5080.0], [261.0, 4775.0], [260.0, 6892.0], [258.0, 3820.0], [257.0, 7132.0], [274.0, 5643.5], [273.0, 5311.5], [317.0, 5339.0], [316.0, 7247.0], [315.0, 5612.0], [313.0, 5976.0], [312.0, 5886.0], [311.0, 5017.0], [331.0, 5276.0], [328.0, 6942.0], [339.0, 4079.5], [381.0, 4330.0], [393.0, 4539.0], [389.0, 4238.0], [388.0, 4280.0], [384.0, 4674.0], [415.0, 4236.0], [407.0, 4624.0], [406.0, 4451.0], [402.0, 4103.0], [427.0, 3655.0], [426.0, 4532.0], [424.0, 3852.0], [423.0, 4039.5], [419.0, 4095.0], [418.0, 4206.0], [434.0, 3943.0], [462.0, 4273.0], [478.0, 4534.0], [477.0, 4886.0], [474.0, 4029.0], [471.0, 4099.0], [465.0, 4372.0], [464.0, 3785.0], [495.0, 4092.0], [487.0, 4199.5], [480.0, 4145.0], [511.0, 4819.0], [510.0, 4480.0], [507.0, 4218.0], [502.0, 4788.5], [542.0, 3689.8], [537.0, 4966.0], [536.0, 4973.5], [525.0, 3390.0], [518.0, 5405.0], [514.0, 5193.0], [513.0, 5561.0], [575.0, 3793.5], [565.0, 3914.0], [557.0, 3701.0], [546.0, 4602.0], [544.0, 5065.0], [598.0, 4246.0], [602.0, 3988.0], [631.0, 5293.0], [613.0, 4589.5], [612.0, 4922.0], [610.0, 4803.0], [608.0, 4831.333333333333], [668.0, 4173.0], [671.0, 4204.0], [667.0, 4191.0], [665.0, 4171.0], [663.0, 4175.666666666667], [662.0, 4086.0], [658.0, 5515.0], [652.0, 4320.0], [651.0, 5365.0], [688.0, 4659.0], [696.0, 4707.0], [692.0, 4678.0], [691.0, 4819.0], [689.0, 4622.0], [686.0, 5409.0], [685.0, 5366.0], [679.0, 4094.0], [675.0, 4117.5], [673.0, 4368.0], [762.0, 3417.3333333333335], [767.0, 4369.0], [765.0, 3167.0], [764.0, 4403.0], [750.0, 3224.0], [745.0, 3784.0], [741.0, 3172.5], [739.0, 3584.0], [738.0, 3392.0], [798.0, 3873.0], [799.0, 3698.0], [796.0, 4030.5], [795.0, 3665.0], [790.0, 3682.5], [788.0, 3782.8571428571427], [784.0, 3681.5], [779.0, 3735.5], [775.0, 4447.0], [768.0, 3082.0], [776.0, 4458.0], [809.0, 4388.0], [806.0, 4292.0], [804.0, 3912.0], [801.0, 3456.0], [800.0, 4441.0], [862.0, 4374.5], [857.0, 4374.5], [854.0, 4556.0], [890.0, 4615.5], [888.0, 3848.0], [887.0, 3369.6666666666665], [884.0, 2173.0], [915.0, 3880.5], [921.0, 3690.6666666666665], [918.0, 2262.0], [917.0, 3949.0], [916.0, 5116.0], [913.0, 4471.333333333333], [910.0, 4076.0], [905.0, 3856.5], [903.0, 3821.0], [902.0, 3717.5], [956.0, 3505.0], [953.0, 3181.777777777778], [959.0, 3155.0], [949.0, 3956.3333333333335], [946.0, 4502.0], [944.0, 3892.0], [943.0, 3930.0], [941.0, 3966.0], [940.0, 4800.0], [938.0, 3154.5], [961.0, 3435.2857142857147], [977.0, 3311.0], [976.0, 3381.5], [975.0, 3895.0], [960.0, 3248.0], [1.0, 4901.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[425.32701421801005, 5551.063981042654]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 43768.0], [3.0, 44080.0], [4.0, 42249.0], [5.0, 40497.0], [6.0, 40097.0], [7.0, 25927.0], [8.0, 30038.0], [9.0, 25387.0], [10.0, 32242.0], [11.0, 25052.0], [12.0, 33985.0], [13.0, 34206.0], [14.0, 28985.0], [15.0, 25018.0], [16.0, 24898.0], [17.0, 33906.0], [18.0, 33060.0], [19.0, 33511.0], [20.0, 33057.0], [21.0, 30581.0], [22.0, 29338.0], [23.0, 32853.0], [24.0, 30905.0], [25.0, 32852.0], [28.0, 33018.666666666664], [29.0, 32915.0], [31.0, 32867.0], [33.0, 30673.0], [32.0, 32672.0], [35.0, 31554.0], [34.0, 31693.0], [37.0, 31657.0], [39.0, 31698.0], [38.0, 31699.0], [41.0, 31667.0], [40.0, 31694.0], [42.0, 31659.0], [45.0, 30920.0], [44.0, 30058.0], [47.0, 29807.0], [46.0, 29796.0], [49.0, 21260.0], [48.0, 21274.0], [51.0, 21012.0], [50.0, 29469.0], [53.0, 27713.0], [52.0, 27936.0], [55.0, 27744.0], [54.0, 20891.0], [57.0, 27357.0], [56.0, 20851.0], [59.0, 28396.0], [58.0, 24940.0], [61.0, 21376.0], [60.0, 21383.0], [63.0, 29671.0], [62.0, 21117.0], [67.0, 20216.5], [65.0, 24791.5], [71.0, 26990.0], [70.0, 24599.5], [68.0, 24280.0], [75.0, 25367.0], [74.0, 26315.0], [73.0, 28950.0], [79.0, 28821.0], [78.0, 28814.0], [77.0, 29115.0], [76.0, 26332.0], [83.0, 28445.0], [82.0, 28650.0], [81.0, 29109.0], [87.0, 27607.0], [86.0, 26701.0], [85.0, 26782.0], [84.0, 25447.0], [91.0, 28146.0], [90.0, 28416.5], [88.0, 28251.0], [94.0, 28782.5], [92.0, 28863.0], [98.0, 28508.0], [96.0, 28041.0], [103.0, 28459.5], [101.0, 28507.333333333332], [100.0, 28799.0], [107.0, 27520.0], [106.0, 28156.0], [105.0, 28005.0], [104.0, 25559.0], [111.0, 26701.0], [110.0, 26830.0], [109.0, 26537.0], [108.0, 27224.0], [115.0, 25233.0], [114.0, 21083.0], [113.0, 26685.0], [112.0, 27322.0], [118.0, 25573.0], [117.0, 23480.0], [116.0, 25757.0], [123.0, 20619.0], [122.0, 22135.0], [120.0, 22126.0], [127.0, 18163.0], [126.0, 21762.5], [124.0, 20474.0], [135.0, 21840.0], [134.0, 18234.0], [133.0, 20206.0], [132.0, 20091.0], [131.0, 22597.0], [130.0, 22452.0], [129.0, 20179.5], [142.0, 22679.0], [140.0, 21660.5], [138.0, 20019.0], [137.0, 23585.0], [136.0, 23213.0], [149.0, 15466.5], [147.0, 15447.0], [146.0, 22585.0], [145.0, 21647.0], [144.0, 21036.5], [155.0, 18481.0], [153.0, 21558.25], [164.0, 15253.0], [163.0, 15222.0], [162.0, 21613.0], [161.0, 15309.0], [160.0, 15303.0], [175.0, 15157.0], [174.0, 15127.0], [173.0, 20983.0], [172.0, 21556.0], [171.0, 15296.0], [170.0, 15277.333333333334], [168.0, 15374.5], [183.0, 15345.0], [182.0, 15239.333333333334], [177.0, 15226.5], [191.0, 15546.333333333334], [188.0, 20490.5], [186.0, 15277.666666666666], [185.0, 15183.5], [199.0, 17011.0], [198.0, 15403.0], [197.0, 20663.5], [196.0, 20623.0], [194.0, 20791.0], [193.0, 20485.0], [207.0, 21519.0], [205.0, 20532.0], [204.0, 22384.0], [203.0, 21076.666666666668], [201.0, 20950.0], [215.0, 21409.0], [214.0, 19885.0], [211.0, 20199.0], [210.0, 19576.0], [209.0, 17024.0], [208.0, 16989.0], [223.0, 19682.0], [222.0, 18307.0], [221.0, 21270.0], [220.0, 14969.0], [219.0, 14960.0], [218.0, 14921.0], [217.0, 14773.5], [231.0, 16262.0], [229.0, 19203.0], [228.0, 19845.0], [225.0, 20424.0], [238.0, 18701.0], [236.0, 20953.0], [233.0, 20137.5], [247.0, 19742.5], [245.0, 14407.0], [244.0, 19459.0], [242.0, 17992.75], [254.0, 17082.0], [252.0, 14378.5], [250.0, 14397.333333333334], [271.0, 17091.0], [270.0, 14370.5], [269.0, 13849.0], [261.0, 20098.5], [260.0, 17476.5], [258.0, 19141.5], [257.0, 20917.0], [286.0, 13821.0], [287.0, 13978.0], [284.0, 13892.0], [282.0, 14367.0], [280.0, 14802.0], [278.0, 13885.0], [277.0, 13885.0], [276.0, 14172.333333333334], [274.0, 17733.333333333332], [273.0, 16971.75], [303.0, 13913.0], [301.0, 14394.0], [300.0, 14137.5], [294.0, 14403.0], [293.0, 14070.4], [288.0, 14111.333333333334], [318.0, 13988.0], [319.0, 14067.0], [317.0, 19466.0], [316.0, 21420.0], [315.0, 19781.0], [313.0, 20156.0], [312.0, 20063.0], [311.0, 19195.0], [307.0, 14951.666666666666], [305.0, 14416.5], [310.0, 14412.0], [309.0, 16426.0], [308.0, 14035.6], [334.0, 16165.5], [332.0, 14098.0], [331.0, 19418.0], [328.0, 15787.0], [326.0, 13925.0], [325.0, 13956.0], [322.0, 13992.333333333334], [349.0, 14013.5], [347.0, 14080.333333333334], [344.0, 14177.75], [342.0, 14133.0], [339.0, 18470.666666666668], [337.0, 14219.0], [336.0, 14157.0], [364.0, 14147.666666666666], [366.0, 14095.0], [367.0, 14079.0], [365.0, 14079.0], [361.0, 14143.0], [360.0, 14409.5], [358.0, 15440.0], [352.0, 14169.666666666666], [355.0, 15410.0], [353.0, 14670.0], [357.0, 15408.0], [356.0, 14700.5], [382.0, 15299.0], [383.0, 14229.0], [381.0, 19609.0], [380.0, 14840.0], [379.0, 14777.0], [378.0, 14777.0], [376.0, 14810.0], [374.0, 14156.0], [369.0, 14187.0], [368.0, 14220.0], [371.0, 14748.0], [370.0, 14172.0], [373.0, 14156.0], [372.0, 14234.0], [387.0, 14909.0], [398.0, 15983.0], [396.0, 14966.0], [395.0, 14326.666666666666], [393.0, 20654.0], [392.0, 14335.0], [389.0, 21196.0], [388.0, 21238.0], [386.0, 17308.0], [385.0, 14243.0], [384.0, 21635.0], [413.0, 17214.0], [415.0, 19421.0], [412.0, 17248.0], [402.0, 22408.0], [401.0, 18250.0], [411.0, 17210.0], [410.0, 14907.5], [408.0, 14273.0], [407.0, 19828.0], [406.0, 19657.0], [405.0, 14272.0], [429.0, 16744.666666666668], [427.0, 18920.0], [426.0, 19733.0], [424.0, 22152.0], [423.0, 19480.25], [416.0, 16226.0], [422.0, 18266.5], [421.0, 18294.0], [419.0, 20320.5], [418.0, 19411.0], [446.0, 14120.333333333334], [443.0, 15586.75], [442.0, 17099.0], [441.0, 14206.0], [438.0, 14093.0], [435.0, 15378.0], [434.0, 20912.333333333332], [432.0, 17133.0], [462.0, 19131.0], [456.0, 15589.666666666666], [455.0, 14759.0], [453.0, 14193.5], [452.0, 14473.0], [449.0, 14203.0], [448.0, 14786.0], [477.0, 16805.2], [478.0, 19389.0], [476.0, 14826.0], [467.0, 14133.0], [465.0, 19240.0], [464.0, 18571.0], [475.0, 17294.0], [474.0, 16761.333333333332], [472.0, 14208.0], [471.0, 16597.5], [470.0, 14178.0], [468.0, 14210.0], [495.0, 16453.5], [494.0, 14314.5], [493.0, 14303.5], [487.0, 17374.0], [483.0, 14861.0], [482.0, 14862.333333333334], [480.0, 19000.0], [511.0, 19432.0], [510.0, 19090.0], [507.0, 17872.0], [505.0, 17112.0], [504.0, 16407.25], [503.0, 16801.0], [502.0, 17735.666666666668], [498.0, 17273.0], [497.0, 17285.0], [537.0, 19300.0], [542.0, 20370.0], [536.0, 18062.25], [519.0, 14301.0], [518.0, 19696.0], [517.0, 14212.0], [515.0, 14360.5], [514.0, 17209.5], [513.0, 20172.0], [532.0, 16810.0], [531.0, 17291.0], [530.0, 13727.0], [529.0, 14140.666666666666], [525.0, 20637.0], [524.0, 16996.0], [523.0, 14329.0], [522.0, 14345.0], [521.0, 14330.0], [520.0, 14314.0], [560.0, 14709.333333333334], [575.0, 17773.0], [566.0, 16412.0], [565.0, 16886.666666666668], [563.0, 15074.0], [557.0, 19591.8], [552.0, 14449.5], [551.0, 16352.0], [550.0, 16368.0], [546.0, 15890.666666666666], [544.0, 19395.0], [602.0, 15764.800000000001], [601.0, 14939.0], [583.0, 14220.666666666666], [581.0, 13902.0], [580.0, 14970.0], [598.0, 15720.333333333334], [597.0, 16418.0], [594.0, 14139.5], [592.0, 14402.666666666666], [588.0, 14057.0], [587.0, 13855.5], [584.0, 14021.0], [637.0, 14463.0], [627.0, 14482.0], [638.0, 14506.0], [624.0, 14425.0], [634.0, 14575.0], [633.0, 14475.0], [623.0, 15149.0], [610.0, 19025.0], [608.0, 19015.0], [613.0, 17348.0], [612.0, 19213.0], [615.0, 14730.5], [614.0, 14262.0], [621.0, 14782.0], [619.0, 14332.0], [618.0, 14426.0], [617.0, 14450.0], [616.0, 15093.0], [631.0, 19797.0], [630.0, 15177.0], [628.0, 17510.0], [626.0, 14475.0], [625.0, 14478.0], [668.0, 19408.0], [671.0, 17806.0], [667.0, 16968.5], [665.0, 17306.0], [664.0, 15224.0], [647.0, 14475.0], [645.0, 15220.0], [644.0, 14981.333333333334], [643.0, 15205.0], [641.0, 14586.0], [640.0, 14461.0], [663.0, 19400.333333333332], [662.0, 19285.0], [658.0, 16827.333333333332], [655.0, 15234.5], [653.0, 15220.0], [652.0, 17365.5], [651.0, 19924.0], [650.0, 14549.333333333334], [689.0, 18267.666666666668], [701.0, 14530.0], [702.0, 14565.0], [688.0, 19841.0], [700.0, 14548.0], [697.0, 14585.0], [696.0, 16731.0], [679.0, 16890.5], [675.0, 19354.5], [673.0, 19602.0], [672.0, 15233.0], [686.0, 18776.333333333332], [685.0, 20538.0], [682.0, 14504.0], [680.0, 14888.0], [693.0, 14512.0], [692.0, 19831.0], [691.0, 19999.5], [732.0, 12360.0], [735.0, 14795.0], [721.0, 14590.0], [720.0, 15898.5], [734.0, 14367.0], [733.0, 14362.0], [731.0, 12366.0], [730.0, 12348.0], [729.0, 12358.0], [728.0, 14036.333333333334], [719.0, 14465.0], [707.0, 14471.0], [705.0, 14439.0], [709.0, 15156.333333333334], [708.0, 14499.5], [717.0, 15176.0], [715.0, 15094.333333333332], [727.0, 13342.0], [723.0, 17203.0], [765.0, 13669.0], [756.0, 10491.0], [767.0, 14840.5], [753.0, 10525.0], [752.0, 11137.0], [764.0, 14910.0], [762.0, 13924.0], [750.0, 13728.0], [736.0, 13656.0], [738.0, 16954.0], [737.0, 14256.0], [741.0, 17108.5], [739.0, 17397.0], [749.0, 10562.0], [748.0, 10600.0], [746.0, 10519.0], [745.0, 13208.25], [759.0, 11129.0], [758.0, 11119.0], [757.0, 10512.0], [755.0, 13415.0], [754.0, 10446.0], [798.0, 13823.0], [799.0, 13628.0], [796.0, 13987.5], [795.0, 13563.0], [792.0, 13012.0], [775.0, 11470.0], [771.0, 10527.0], [770.0, 10395.0], [769.0, 10388.0], [768.0, 13490.0], [790.0, 13969.0], [788.0, 13964.625], [784.0, 13914.0], [779.0, 13957.5], [776.0, 14794.0], [827.0, 10826.0], [819.0, 10945.0], [829.0, 10614.0], [831.0, 9860.0], [817.0, 9902.0], [816.0, 10122.0], [828.0, 10877.0], [826.0, 10646.0], [807.0, 11009.0], [806.0, 14302.0], [804.0, 13824.666666666666], [801.0, 13349.0], [800.0, 14451.0], [814.0, 11002.0], [813.0, 10952.0], [812.0, 9743.0], [811.0, 12340.0], [810.0, 10598.5], [809.0, 14392.0], [823.0, 9998.0], [822.0, 11024.0], [820.0, 10820.0], [861.0, 9964.0], [862.0, 14384.5], [859.0, 9964.0], [857.0, 12238.25], [854.0, 13776.0], [852.0, 10907.333333333334], [850.0, 10681.0], [849.0, 10638.0], [845.0, 9954.0], [832.0, 9926.0], [836.0, 10833.5], [834.0, 10106.75], [839.0, 10452.0], [837.0, 10743.0], [844.0, 10655.5], [842.0, 9874.0], [841.0, 9946.5], [882.0, 9683.0], [892.0, 9226.0], [894.0, 9217.0], [881.0, 9988.0], [891.0, 9952.0], [890.0, 14664.0], [888.0, 13875.0], [870.0, 10404.0], [869.0, 10990.0], [867.0, 10841.666666666666], [864.0, 12181.5], [879.0, 10758.0], [878.0, 9697.0], [877.0, 10952.0], [876.0, 10323.0], [874.0, 9734.0], [873.0, 9743.5], [887.0, 14866.333333333334], [885.0, 10806.0], [884.0, 12702.5], [922.0, 13615.0], [915.0, 12357.5], [926.0, 13763.5], [927.0, 6108.0], [913.0, 12968.666666666666], [924.0, 13700.0], [921.0, 12918.0], [903.0, 13044.0], [902.0, 12959.0], [900.0, 10195.0], [899.0, 9704.0], [897.0, 10165.0], [896.0, 9744.5], [911.0, 10714.0], [910.0, 12570.0], [909.0, 13922.5], [906.0, 13892.0], [905.0, 13085.5], [918.0, 12984.0], [917.0, 12424.0], [916.0, 13606.0], [956.0, 8767.0], [953.0, 6851.944444444444], [959.0, 9622.0], [955.0, 6589.0], [952.0, 6427.0], [934.0, 6764.333333333333], [932.0, 7095.0], [930.0, 7076.0], [928.0, 7086.0], [943.0, 9395.0], [941.0, 9440.0], [940.0, 10282.0], [938.0, 9734.5], [936.0, 6055.5], [950.0, 6462.0], [949.0, 9415.0], [946.0, 9990.25], [944.0, 9346.0], [975.0, 9600.0], [961.0, 8754.571428571428], [960.0, 9792.75], [962.0, 5462.0], [965.0, 5474.0], [964.0, 5481.0], [977.0, 8763.0], [976.0, 8742.5], [973.0, 5496.0], [972.0, 5734.0], [971.0, 5507.0], [970.0, 5796.0], [969.0, 5433.5], [967.0, 5595.0], [966.0, 5498.5], [1.0, 46052.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[501.182999999999, 16539.182999999997]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 977.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2116.133333333333, "minX": 1.70230242E12, "maxY": 509167.75, "series": [{"data": [[1.70230242E12, 509167.75]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70230242E12, 2116.133333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70230242E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 5551.063981042654, "minX": 1.70230242E12, "maxY": 16539.182999999997, "series": [{"data": [[1.70230242E12, 14943.613744075828]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70230242E12, 5551.063981042654]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70230242E12, 16539.182999999997]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70230242E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2342.495, "minX": 1.70230242E12, "maxY": 5550.936018957344, "series": [{"data": [[1.70230242E12, 5201.172985781992]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70230242E12, 5550.936018957344]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70230242E12, 2342.495]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70230242E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 2650.4526066350713, "minX": 1.70230242E12, "maxY": 12763.17061611375, "series": [{"data": [[1.70230242E12, 12763.17061611375]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70230242E12, 2650.4526066350713]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70230242E12, 4751.335000000003]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70230242E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1981.0, "minX": 1.70230242E12, "maxY": 46052.0, "series": [{"data": [[1.70230242E12, 46052.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70230242E12, 28646.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70230242E12, 40277.000000000015]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70230242E12, 31693.25]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.70230242E12, 1981.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70230242E12, 5521.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70230242E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2321.0, "minX": 2.0, "maxY": 40297.0, "series": [{"data": [[32.0, 20980.5], [2.0, 40297.0], [43.0, 4567.0], [42.0, 26441.5], [48.0, 26237.0], [50.0, 4284.0], [51.0, 14011.0], [52.0, 4455.5], [13.0, 24374.0], [53.0, 15897.0], [14.0, 6257.5], [58.0, 6691.0], [16.0, 25219.5], [4.0, 34437.0], [73.0, 4171.0], [5.0, 10075.0], [21.0, 24229.0], [89.0, 14930.0], [98.0, 14680.5], [24.0, 28431.0], [101.0, 6251.5], [27.0, 2644.0], [28.0, 2321.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[9.0, 14256.0], [51.0, 12424.0], [13.0, 13656.0], [53.0, 20055.0], [14.0, 7061.0], [58.0, 6579.0], [235.0, 14849.0], [303.0, 15167.0], [19.0, 9243.0], [21.0, 18026.0], [89.0, 15466.0], [98.0, 10707.0], [101.0, 5466.0], [110.0, 10652.0], [121.0, 14488.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 303.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 15897.0, "series": [{"data": [[32.0, 11698.0], [2.0, 9704.5], [43.0, 4567.0], [42.0, 14383.5], [48.0, 13248.5], [50.0, 4284.0], [51.0, 14011.0], [52.0, 4455.5], [13.0, 15728.0], [53.0, 15897.0], [14.0, 6257.5], [58.0, 6691.0], [16.0, 14887.5], [4.0, 12916.5], [73.0, 4171.0], [5.0, 10075.0], [21.0, 15237.5], [89.0, 14930.0], [98.0, 14680.5], [24.0, 15593.0], [101.0, 6251.5], [27.0, 2644.0], [28.0, 2321.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[9.0, 0.0], [51.0, 0.0], [13.0, 0.0], [53.0, 0.0], [14.0, 0.0], [58.0, 0.0], [235.0, 0.0], [303.0, 0.0], [19.0, 0.0], [21.0, 2734.0], [89.0, 0.0], [98.0, 0.0], [101.0, 0.0], [110.0, 0.0], [121.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 303.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 30.733333333333334, "minX": 1.70230242E12, "maxY": 30.733333333333334, "series": [{"data": [[1.70230242E12, 30.733333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70230242E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.70230242E12, "maxY": 19.75, "series": [{"data": [[1.70230242E12, 3.8666666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70230242E12, 7.033333333333333]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.70230242E12, 0.08333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.70230242E12, 19.75]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70230242E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.9333333333333333, "minX": 1.70230242E12, "maxY": 14.733333333333333, "series": [{"data": [[1.70230242E12, 14.733333333333333]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.70230242E12, 1.9333333333333333]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.70230242E12, 7.033333333333333]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.70230242E12, 5.1]], "isOverall": false, "label": "HTTP Request-1-failure", "isController": false}, {"data": [[1.70230242E12, 1.9333333333333333]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70230242E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 10.9, "minX": 1.70230242E12, "maxY": 19.833333333333332, "series": [{"data": [[1.70230242E12, 10.9]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.70230242E12, 19.833333333333332]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70230242E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

